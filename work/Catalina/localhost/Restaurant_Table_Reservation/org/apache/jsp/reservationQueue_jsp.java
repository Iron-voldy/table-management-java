/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.41
 * Generated at: 2025-05-26 16:45:43 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import java.util.*;
import com.example.restaurant_table_reservation.model.Reservation;
import com.example.restaurant_table_reservation.model.Table;
import com.example.restaurant_table_reservation.service.TableService;

public final class reservationQueue_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(6);
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(4);
    _jspx_imports_classes.add("com.example.restaurant_table_reservation.model.Table");
    _jspx_imports_classes.add("com.example.restaurant_table_reservation.model.Reservation");
    _jspx_imports_classes.add("com.example.restaurant_table_reservation.service.TableService");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <title>Reservation Queue - Restaurant Management</title>\r\n");
      out.write("    <style>\r\n");
      out.write("        :root {\r\n");
      out.write("            --primary: #4361ee;\r\n");
      out.write("            --primary-dark: #3a0ca3;\r\n");
      out.write("            --accent: #f72585;\r\n");
      out.write("            --light: #f8f9fa;\r\n");
      out.write("            --dark: #212529;\r\n");
      out.write("            --gray: #6c757d;\r\n");
      out.write("            --border: #dee2e6;\r\n");
      out.write("            --success: #28a745;\r\n");
      out.write("            --warning: #ffc107;\r\n");
      out.write("            --error: #dc3545;\r\n");
      out.write("            --info: #17a2b8;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        * {\r\n");
      out.write("            margin: 0;\r\n");
      out.write("            padding: 0;\r\n");
      out.write("            box-sizing: border-box;\r\n");
      out.write("            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        body {\r\n");
      out.write("            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\r\n");
      out.write("            min-height: 100vh;\r\n");
      out.write("            color: var(--dark);\r\n");
      out.write("            line-height: 1.6;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .container {\r\n");
      out.write("            max-width: 1400px;\r\n");
      out.write("            margin: 0 auto;\r\n");
      out.write("            padding: 20px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .header {\r\n");
      out.write("            text-align: center;\r\n");
      out.write("            margin-bottom: 30px;\r\n");
      out.write("            padding: 30px;\r\n");
      out.write("            background: rgba(255, 255, 255, 0.95);\r\n");
      out.write("            border-radius: 15px;\r\n");
      out.write("            backdrop-filter: blur(10px);\r\n");
      out.write("            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .header h1 {\r\n");
      out.write("            font-size: 2.8rem;\r\n");
      out.write("            margin-bottom: 10px;\r\n");
      out.write("            background: linear-gradient(135deg, var(--primary), var(--accent));\r\n");
      out.write("            -webkit-background-clip: text;\r\n");
      out.write("            -webkit-text-fill-color: transparent;\r\n");
      out.write("            font-weight: 700;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .header p {\r\n");
      out.write("            font-size: 1.1rem;\r\n");
      out.write("            color: var(--gray);\r\n");
      out.write("            margin-bottom: 20px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .breadcrumb {\r\n");
      out.write("            display: flex;\r\n");
      out.write("            align-items: center;\r\n");
      out.write("            justify-content: center;\r\n");
      out.write("            gap: 10px;\r\n");
      out.write("            font-size: 0.9rem;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .breadcrumb a {\r\n");
      out.write("            color: var(--primary);\r\n");
      out.write("            text-decoration: none;\r\n");
      out.write("            padding: 5px 10px;\r\n");
      out.write("            border-radius: 5px;\r\n");
      out.write("            transition: all 0.3s;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .breadcrumb a:hover {\r\n");
      out.write("            background: var(--primary);\r\n");
      out.write("            color: white;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .stats-grid {\r\n");
      out.write("            display: grid;\r\n");
      out.write("            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\r\n");
      out.write("            gap: 20px;\r\n");
      out.write("            margin-bottom: 30px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .stat-card {\r\n");
      out.write("            background: rgba(255, 255, 255, 0.95);\r\n");
      out.write("            border-radius: 15px;\r\n");
      out.write("            padding: 25px;\r\n");
      out.write("            backdrop-filter: blur(10px);\r\n");
      out.write("            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);\r\n");
      out.write("            transition: all 0.3s;\r\n");
      out.write("            border-left: 5px solid var(--primary);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .stat-card:hover {\r\n");
      out.write("            transform: translateY(-5px);\r\n");
      out.write("            box-shadow: 0 12px 40px rgba(0, 0, 0, 0.15);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .stat-card.success {\r\n");
      out.write("            border-left-color: var(--success);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .stat-card.warning {\r\n");
      out.write("            border-left-color: var(--warning);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .stat-card.error {\r\n");
      out.write("            border-left-color: var(--error);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .stat-card-header {\r\n");
      out.write("            display: flex;\r\n");
      out.write("            justify-content: space-between;\r\n");
      out.write("            align-items: center;\r\n");
      out.write("            margin-bottom: 15px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .stat-card-icon {\r\n");
      out.write("            width: 50px;\r\n");
      out.write("            height: 50px;\r\n");
      out.write("            border-radius: 50%;\r\n");
      out.write("            display: flex;\r\n");
      out.write("            align-items: center;\r\n");
      out.write("            justify-content: center;\r\n");
      out.write("            color: white;\r\n");
      out.write("            font-size: 1.5rem;\r\n");
      out.write("            background: linear-gradient(135deg, var(--primary), var(--primary-dark));\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .stat-card.success .stat-card-icon {\r\n");
      out.write("            background: linear-gradient(135deg, var(--success), #1e7e34);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .stat-card.warning .stat-card-icon {\r\n");
      out.write("            background: linear-gradient(135deg, var(--warning), #e0a800);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .stat-card.error .stat-card-icon {\r\n");
      out.write("            background: linear-gradient(135deg, var(--error), #bd2130);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .stat-number {\r\n");
      out.write("            font-size: 2rem;\r\n");
      out.write("            font-weight: 700;\r\n");
      out.write("            color: var(--primary);\r\n");
      out.write("            margin: 10px 0;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .stat-label {\r\n");
      out.write("            color: var(--gray);\r\n");
      out.write("            font-size: 0.9rem;\r\n");
      out.write("            text-transform: uppercase;\r\n");
      out.write("            letter-spacing: 0.5px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .section-card {\r\n");
      out.write("            background: rgba(255, 255, 255, 0.95);\r\n");
      out.write("            border-radius: 15px;\r\n");
      out.write("            padding: 30px;\r\n");
      out.write("            margin-bottom: 30px;\r\n");
      out.write("            backdrop-filter: blur(10px);\r\n");
      out.write("            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .section-header {\r\n");
      out.write("            display: flex;\r\n");
      out.write("            align-items: center;\r\n");
      out.write("            margin-bottom: 25px;\r\n");
      out.write("            padding-bottom: 15px;\r\n");
      out.write("            border-bottom: 2px solid var(--border);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .section-header h3 {\r\n");
      out.write("            font-size: 1.4rem;\r\n");
      out.write("            color: var(--primary);\r\n");
      out.write("            margin-left: 10px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .section-header i {\r\n");
      out.write("            font-size: 1.5rem;\r\n");
      out.write("            color: var(--primary);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .form-grid {\r\n");
      out.write("            display: grid;\r\n");
      out.write("            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\r\n");
      out.write("            gap: 20px;\r\n");
      out.write("            margin-bottom: 25px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .form-group {\r\n");
      out.write("            display: flex;\r\n");
      out.write("            flex-direction: column;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .form-group label {\r\n");
      out.write("            margin-bottom: 8px;\r\n");
      out.write("            font-weight: 600;\r\n");
      out.write("            color: var(--dark);\r\n");
      out.write("            font-size: 0.9rem;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .form-group input,\r\n");
      out.write("        .form-group select,\r\n");
      out.write("        .form-group textarea {\r\n");
      out.write("            padding: 12px 15px;\r\n");
      out.write("            border: 2px solid var(--border);\r\n");
      out.write("            border-radius: 8px;\r\n");
      out.write("            font-size: 14px;\r\n");
      out.write("            transition: all 0.3s;\r\n");
      out.write("            background: white;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .form-group input:focus,\r\n");
      out.write("        .form-group select:focus,\r\n");
      out.write("        .form-group textarea:focus {\r\n");
      out.write("            outline: none;\r\n");
      out.write("            border-color: var(--primary);\r\n");
      out.write("            box-shadow: 0 0 0 3px rgba(67, 97, 238, 0.2);\r\n");
      out.write("            transform: translateY(-2px);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .btn {\r\n");
      out.write("            padding: 12px 24px;\r\n");
      out.write("            border: none;\r\n");
      out.write("            border-radius: 8px;\r\n");
      out.write("            cursor: pointer;\r\n");
      out.write("            font-size: 14px;\r\n");
      out.write("            font-weight: 600;\r\n");
      out.write("            transition: all 0.3s;\r\n");
      out.write("            text-decoration: none;\r\n");
      out.write("            display: inline-flex;\r\n");
      out.write("            align-items: center;\r\n");
      out.write("            gap: 8px;\r\n");
      out.write("            text-align: center;\r\n");
      out.write("            position: relative;\r\n");
      out.write("            overflow: hidden;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .btn::before {\r\n");
      out.write("            content: '';\r\n");
      out.write("            position: absolute;\r\n");
      out.write("            top: 0;\r\n");
      out.write("            left: -100%;\r\n");
      out.write("            width: 100%;\r\n");
      out.write("            height: 100%;\r\n");
      out.write("            background: linear-gradient(90deg, transparent, rgba(255,255,255,0.2), transparent);\r\n");
      out.write("            transition: left 0.5s;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .btn:hover::before {\r\n");
      out.write("            left: 100%;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .btn-primary {\r\n");
      out.write("            background: linear-gradient(135deg, var(--primary), var(--primary-dark));\r\n");
      out.write("            color: white;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .btn-primary:hover {\r\n");
      out.write("            transform: translateY(-2px);\r\n");
      out.write("            box-shadow: 0 8px 25px rgba(67, 97, 238, 0.3);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .btn-success {\r\n");
      out.write("            background: linear-gradient(135deg, var(--success), #1e7e34);\r\n");
      out.write("            color: white;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .btn-success:hover {\r\n");
      out.write("            transform: translateY(-2px);\r\n");
      out.write("            box-shadow: 0 8px 25px rgba(40, 167, 69, 0.3);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .btn-warning {\r\n");
      out.write("            background: linear-gradient(135deg, var(--warning), #e0a800);\r\n");
      out.write("            color: var(--dark);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .btn-warning:hover {\r\n");
      out.write("            transform: translateY(-2px);\r\n");
      out.write("            box-shadow: 0 8px 25px rgba(255, 193, 7, 0.3);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .btn-danger {\r\n");
      out.write("            background: linear-gradient(135deg, var(--error), #bd2130);\r\n");
      out.write("            color: white;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .btn-danger:hover {\r\n");
      out.write("            transform: translateY(-2px);\r\n");
      out.write("            box-shadow: 0 8px 25px rgba(220, 53, 69, 0.3);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .btn-secondary {\r\n");
      out.write("            background: linear-gradient(135deg, var(--gray), #5a6268);\r\n");
      out.write("            color: white;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .btn-sm {\r\n");
      out.write("            padding: 8px 16px;\r\n");
      out.write("            font-size: 12px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .queue-table {\r\n");
      out.write("            width: 100%;\r\n");
      out.write("            border-collapse: collapse;\r\n");
      out.write("            background: white;\r\n");
      out.write("            border-radius: 10px;\r\n");
      out.write("            overflow: hidden;\r\n");
      out.write("            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .queue-table th,\r\n");
      out.write("        .queue-table td {\r\n");
      out.write("            padding: 15px 12px;\r\n");
      out.write("            text-align: left;\r\n");
      out.write("            border-bottom: 1px solid var(--border);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .queue-table th {\r\n");
      out.write("            background: linear-gradient(135deg, var(--primary), var(--primary-dark));\r\n");
      out.write("            color: white;\r\n");
      out.write("            font-weight: 600;\r\n");
      out.write("            position: sticky;\r\n");
      out.write("            top: 0;\r\n");
      out.write("            z-index: 1;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .queue-table tr:hover {\r\n");
      out.write("            background: var(--light);\r\n");
      out.write("            transform: scale(1.01);\r\n");
      out.write("            transition: all 0.2s;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .queue-table td:first-child {\r\n");
      out.write("            font-weight: 700;\r\n");
      out.write("            color: var(--primary);\r\n");
      out.write("            font-size: 1.1rem;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .status-badge {\r\n");
      out.write("            padding: 6px 12px;\r\n");
      out.write("            border-radius: 20px;\r\n");
      out.write("            font-size: 11px;\r\n");
      out.write("            font-weight: 600;\r\n");
      out.write("            text-transform: uppercase;\r\n");
      out.write("            letter-spacing: 0.5px;\r\n");
      out.write("            display: inline-flex;\r\n");
      out.write("            align-items: center;\r\n");
      out.write("            gap: 5px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .status-pending {\r\n");
      out.write("            background: linear-gradient(135deg, #fff3cd, #ffeaa7);\r\n");
      out.write("            color: #856404;\r\n");
      out.write("            border: 1px solid #ffeaa7;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .status-confirmed {\r\n");
      out.write("            background: linear-gradient(135deg, #d4edda, #00b894);\r\n");
      out.write("            color: white;\r\n");
      out.write("            border: 1px solid #00b894;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .status-cancelled {\r\n");
      out.write("            background: linear-gradient(135deg, #f8d7da, #e74c3c);\r\n");
      out.write("            color: white;\r\n");
      out.write("            border: 1px solid #e74c3c;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .action-buttons {\r\n");
      out.write("            display: flex;\r\n");
      out.write("            gap: 8px;\r\n");
      out.write("            flex-wrap: wrap;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .message {\r\n");
      out.write("            padding: 15px 20px;\r\n");
      out.write("            border-radius: 10px;\r\n");
      out.write("            margin-bottom: 20px;\r\n");
      out.write("            display: flex;\r\n");
      out.write("            align-items: center;\r\n");
      out.write("            gap: 12px;\r\n");
      out.write("            font-weight: 500;\r\n");
      out.write("            animation: slideIn 0.3s ease;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        @keyframes slideIn {\r\n");
      out.write("            from {\r\n");
      out.write("                opacity: 0;\r\n");
      out.write("                transform: translateY(-10px);\r\n");
      out.write("            }\r\n");
      out.write("            to {\r\n");
      out.write("                opacity: 1;\r\n");
      out.write("                transform: translateY(0);\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .message.success {\r\n");
      out.write("            background: linear-gradient(135deg, #d4edda, #c3e6cb);\r\n");
      out.write("            color: #155724;\r\n");
      out.write("            border-left: 5px solid var(--success);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .message.error {\r\n");
      out.write("            background: linear-gradient(135deg, #f8d7da, #f5c6cb);\r\n");
      out.write("            color: #721c24;\r\n");
      out.write("            border-left: 5px solid var(--error);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .message.info {\r\n");
      out.write("            background: linear-gradient(135deg, #d1ecf1, #bee5eb);\r\n");
      out.write("            color: #0c5460;\r\n");
      out.write("            border-left: 5px solid var(--info);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .empty-state {\r\n");
      out.write("            text-align: center;\r\n");
      out.write("            padding: 60px 20px;\r\n");
      out.write("            color: var(--gray);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .empty-state i {\r\n");
      out.write("            font-size: 4rem;\r\n");
      out.write("            margin-bottom: 20px;\r\n");
      out.write("            color: var(--border);\r\n");
      out.write("            animation: float 3s ease-in-out infinite;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        @keyframes float {\r\n");
      out.write("            0%, 100% { transform: translateY(0px); }\r\n");
      out.write("            50% { transform: translateY(-10px); }\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .empty-state h3 {\r\n");
      out.write("            margin-bottom: 10px;\r\n");
      out.write("            color: var(--gray);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .operations-grid {\r\n");
      out.write("            display: grid;\r\n");
      out.write("            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\r\n");
      out.write("            gap: 15px;\r\n");
      out.write("            margin-top: 20px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .loading {\r\n");
      out.write("            display: inline-block;\r\n");
      out.write("            width: 20px;\r\n");
      out.write("            height: 20px;\r\n");
      out.write("            border: 3px solid rgba(255,255,255,.3);\r\n");
      out.write("            border-radius: 50%;\r\n");
      out.write("            border-top-color: #fff;\r\n");
      out.write("            animation: spin 1s ease-in-out infinite;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        @keyframes spin {\r\n");
      out.write("            to { transform: rotate(360deg); }\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .priority-indicator {\r\n");
      out.write("            width: 8px;\r\n");
      out.write("            height: 8px;\r\n");
      out.write("            border-radius: 50%;\r\n");
      out.write("            display: inline-block;\r\n");
      out.write("            margin-right: 8px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .priority-high {\r\n");
      out.write("            background: var(--error);\r\n");
      out.write("            animation: pulse 2s infinite;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .priority-medium {\r\n");
      out.write("            background: var(--warning);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .priority-low {\r\n");
      out.write("            background: var(--success);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        @keyframes pulse {\r\n");
      out.write("            0% { opacity: 1; }\r\n");
      out.write("            50% { opacity: 0.5; }\r\n");
      out.write("            100% { opacity: 1; }\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .queue-position {\r\n");
      out.write("            background: linear-gradient(135deg, var(--primary), var(--primary-dark));\r\n");
      out.write("            color: white;\r\n");
      out.write("            padding: 8px 12px;\r\n");
      out.write("            border-radius: 20px;\r\n");
      out.write("            font-weight: 700;\r\n");
      out.write("            font-size: 0.9rem;\r\n");
      out.write("            display: inline-flex;\r\n");
      out.write("            align-items: center;\r\n");
      out.write("            gap: 5px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .time-remaining {\r\n");
      out.write("            font-size: 0.8rem;\r\n");
      out.write("            color: var(--gray);\r\n");
      out.write("            font-style: italic;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .customer-info {\r\n");
      out.write("            display: flex;\r\n");
      out.write("            flex-direction: column;\r\n");
      out.write("            gap: 2px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .customer-name {\r\n");
      out.write("            font-weight: 600;\r\n");
      out.write("            color: var(--dark);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .customer-details {\r\n");
      out.write("            font-size: 0.8rem;\r\n");
      out.write("            color: var(--gray);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .table-info {\r\n");
      out.write("            display: flex;\r\n");
      out.write("            align-items: center;\r\n");
      out.write("            gap: 8px;\r\n");
      out.write("            padding: 8px 12px;\r\n");
      out.write("            background: var(--light);\r\n");
      out.write("            border-radius: 8px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .refresh-indicator {\r\n");
      out.write("            position: fixed;\r\n");
      out.write("            top: 20px;\r\n");
      out.write("            right: 20px;\r\n");
      out.write("            background: var(--primary);\r\n");
      out.write("            color: white;\r\n");
      out.write("            padding: 10px 15px;\r\n");
      out.write("            border-radius: 25px;\r\n");
      out.write("            font-size: 0.8rem;\r\n");
      out.write("            opacity: 0;\r\n");
      out.write("            transition: opacity 0.3s;\r\n");
      out.write("            z-index: 1000;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .refresh-indicator.show {\r\n");
      out.write("            opacity: 1;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        @media (max-width: 768px) {\r\n");
      out.write("            .container {\r\n");
      out.write("                padding: 10px;\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            .header h1 {\r\n");
      out.write("                font-size: 2rem;\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            .form-grid {\r\n");
      out.write("                grid-template-columns: 1fr;\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            .stats-grid {\r\n");
      out.write("                grid-template-columns: 1fr;\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            .operations-grid {\r\n");
      out.write("                grid-template-columns: 1fr;\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            .queue-table {\r\n");
      out.write("                font-size: 14px;\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            .queue-table th,\r\n");
      out.write("            .queue-table td {\r\n");
      out.write("                padding: 10px 8px;\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            .action-buttons {\r\n");
      out.write("                flex-direction: column;\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        @media (max-width: 480px) {\r\n");
      out.write("            .header {\r\n");
      out.write("                padding: 20px;\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            .section-card {\r\n");
      out.write("                padding: 20px;\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("    </style>\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <!-- Refresh Indicator -->\r\n");
      out.write("    <div class=\"refresh-indicator\" id=\"refreshIndicator\">\r\n");
      out.write("        <i class=\"fas fa-sync-alt\"></i> Auto-refreshing...\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <div class=\"container\">\r\n");
      out.write("        <!-- Header -->\r\n");
      out.write("        <div class=\"header\">\r\n");
      out.write("            <h1><i class=\"fas fa-clock\"></i> Reservation Queue</h1>\r\n");
      out.write("            <p>Advanced queue management with custom data structures and algorithms</p>\r\n");
      out.write("            <div class=\"breadcrumb\">\r\n");
      out.write("                <a href=\"index.jsp\"><i class=\"fas fa-home\"></i> Home</a>\r\n");
      out.write("                <span>/</span>\r\n");
      out.write("                <a href=\"userTables\"><i class=\"fas fa-chair\"></i> Tables</a>\r\n");
      out.write("                <span>/</span>\r\n");
      out.write("                <span>Queue Management</span>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("        <!-- Display Messages -->\r\n");
      out.write("        ");
 if (request.getAttribute("message") != null) { 
      out.write("\r\n");
      out.write("            <div class=\"message success\">\r\n");
      out.write("                <i class=\"fas fa-check-circle\"></i>\r\n");
      out.write("                ");
      out.print( request.getAttribute("message") );
      out.write("\r\n");
      out.write("            </div>\r\n");
      out.write("        ");
 } 
      out.write("\r\n");
      out.write("\r\n");
      out.write("        ");
 if (request.getAttribute("error") != null) { 
      out.write("\r\n");
      out.write("            <div class=\"message error\">\r\n");
      out.write("                <i class=\"fas fa-exclamation-circle\"></i>\r\n");
      out.write("                ");
      out.print( request.getAttribute("error") );
      out.write("\r\n");
      out.write("            </div>\r\n");
      out.write("        ");
 } 
      out.write("\r\n");
      out.write("\r\n");
      out.write("        <!-- Queue Statistics -->\r\n");
      out.write("        <div class=\"stats-grid\">\r\n");
      out.write("            <div class=\"stat-card\">\r\n");
      out.write("                <div class=\"stat-card-header\">\r\n");
      out.write("                    <div>\r\n");
      out.write("                        <div class=\"stat-label\">Total in Queue</div>\r\n");
      out.write("                        <div class=\"stat-number\">");
      out.print( request.getAttribute("queueSize") != null ? request.getAttribute("queueSize") : 0 );
      out.write("</div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"stat-card-icon\">\r\n");
      out.write("                        <i class=\"fas fa-list-ol\"></i>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("                <p>Current reservations waiting</p>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <div class=\"stat-card ");
      out.print( (Boolean) request.getAttribute("queueEmpty") ? "success" : "warning" );
      out.write("\">\r\n");
      out.write("                <div class=\"stat-card-header\">\r\n");
      out.write("                    <div>\r\n");
      out.write("                        <div class=\"stat-label\">Queue Status</div>\r\n");
      out.write("                        <div class=\"stat-number\">");
      out.print( (Boolean) request.getAttribute("queueEmpty") ? "Empty" : "Active" );
      out.write("</div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"stat-card-icon\">\r\n");
      out.write("                        <i class=\"fas fa-");
      out.print( (Boolean) request.getAttribute("queueEmpty") ? "check" : "clock" );
      out.write("\"></i>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("                <p>");
      out.print( (Boolean) request.getAttribute("queueEmpty") ? "No pending reservations" : "Processing reservations" );
      out.write("</p>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <div class=\"stat-card ");
      out.print( (Boolean) request.getAttribute("queueFull") ? "error" : "success" );
      out.write("\">\r\n");
      out.write("                <div class=\"stat-card-header\">\r\n");
      out.write("                    <div>\r\n");
      out.write("                        <div class=\"stat-label\">Capacity</div>\r\n");
      out.write("                        <div class=\"stat-number\">");
      out.print( (Boolean) request.getAttribute("queueFull") ? "Full" : "Available" );
      out.write("</div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"stat-card-icon\">\r\n");
      out.write("                        <i class=\"fas fa-");
      out.print( (Boolean) request.getAttribute("queueFull") ? "exclamation-triangle" : "check-circle" );
      out.write("\"></i>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("                <p>");
      out.print( (Boolean) request.getAttribute("queueFull") ? "Queue at maximum capacity" : "Space available for new reservations" );
      out.write("</p>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <div class=\"stat-card\">\r\n");
      out.write("                <div class=\"stat-card-header\">\r\n");
      out.write("                    <div>\r\n");
      out.write("                        <div class=\"stat-label\">Data Structure</div>\r\n");
      out.write("                        <div class=\"stat-number\">Custom</div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"stat-card-icon\">\r\n");
      out.write("                        <i class=\"fas fa-code\"></i>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("                <p>Queue + Merge Sort Implementation</p>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("        <!-- Add Reservation Form -->\r\n");
      out.write("        <div class=\"section-card\">\r\n");
      out.write("            <div class=\"section-header\">\r\n");
      out.write("                <i class=\"fas fa-plus-circle\"></i>\r\n");
      out.write("                <h3>Add New Reservation to Queue</h3>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <form action=\"reservationQueue\" method=\"post\" id=\"addReservationForm\">\r\n");
      out.write("                <input type=\"hidden\" name=\"action\" value=\"addToQueue\">\r\n");
      out.write("\r\n");
      out.write("                <div class=\"form-grid\">\r\n");
      out.write("                    <div class=\"form-group\">\r\n");
      out.write("                        <label for=\"tableId\"><i class=\"fas fa-chair\"></i> Table Selection</label>\r\n");
      out.write("                        <select id=\"tableId\" name=\"tableId\" required>\r\n");
      out.write("                            <option value=\"\">Choose a table...</option>\r\n");
      out.write("                            ");

                                // Get available tables (you can enhance this to show only available tables)
                                for (int i = 1; i <= 10; i++) {
                            
      out.write("\r\n");
      out.write("                            <option value=\"");
      out.print( i );
      out.write("\">Table ");
      out.print( i );
      out.write(" (4 seats)</option>\r\n");
      out.write("                            ");
 } 
      out.write("\r\n");
      out.write("                        </select>\r\n");
      out.write("                    </div>\r\n");
      out.write("\r\n");
      out.write("                    <div class=\"form-group\">\r\n");
      out.write("                        <label for=\"customerName\"><i class=\"fas fa-user\"></i> Customer Name</label>\r\n");
      out.write("                        <input type=\"text\" id=\"customerName\" name=\"customerName\" required\r\n");
      out.write("                               placeholder=\"Enter customer name\" maxlength=\"100\">\r\n");
      out.write("                    </div>\r\n");
      out.write("\r\n");
      out.write("                    <div class=\"form-group\">\r\n");
      out.write("                        <label for=\"customerPhone\"><i class=\"fas fa-phone\"></i> Phone Number</label>\r\n");
      out.write("                        <input type=\"tel\" id=\"customerPhone\" name=\"customerPhone\"\r\n");
      out.write("                               placeholder=\"Enter phone number\" maxlength=\"15\">\r\n");
      out.write("                    </div>\r\n");
      out.write("\r\n");
      out.write("                    <div class=\"form-group\">\r\n");
      out.write("                        <label for=\"reservationTime\"><i class=\"fas fa-calendar-alt\"></i> Reservation Date & Time</label>\r\n");
      out.write("                        <input type=\"datetime-local\" id=\"reservationTime\" name=\"reservationTime\" required>\r\n");
      out.write("                    </div>\r\n");
      out.write("\r\n");
      out.write("                    <div class=\"form-group\">\r\n");
      out.write("                        <label for=\"customerEmail\"><i class=\"fas fa-envelope\"></i> Email (Optional)</label>\r\n");
      out.write("                        <input type=\"email\" id=\"customerEmail\" name=\"customerEmail\"\r\n");
      out.write("                               placeholder=\"Enter email address\" maxlength=\"100\">\r\n");
      out.write("                    </div>\r\n");
      out.write("\r\n");
      out.write("                    <div class=\"form-group\">\r\n");
      out.write("                        <label for=\"specialRequests\"><i class=\"fas fa-comment\"></i> Special Requests</label>\r\n");
      out.write("                        <textarea id=\"specialRequests\" name=\"specialRequests\" rows=\"3\"\r\n");
      out.write("                                  placeholder=\"Any special requirements...\" maxlength=\"500\"></textarea>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("\r\n");
      out.write("                <div style=\"margin-top: 25px; text-align: center;\">\r\n");
      out.write("                    <button type=\"submit\" class=\"btn btn-primary\" id=\"submitBtn\">\r\n");
      out.write("                        <i class=\"fas fa-plus\"></i> Add to Queue\r\n");
      out.write("                    </button>\r\n");
      out.write("                    <button type=\"reset\" class=\"btn btn-secondary\">\r\n");
      out.write("                        <i class=\"fas fa-undo\"></i> Reset Form\r\n");
      out.write("                    </button>\r\n");
      out.write("                </div>\r\n");
      out.write("            </form>\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("        <!-- Current Queue Display -->\r\n");
      out.write("        <div class=\"section-card\">\r\n");
      out.write("            <div class=\"section-header\">\r\n");
      out.write("                <i class=\"fas fa-list\"></i>\r\n");
      out.write("                <h3>Current Reservation Queue</h3>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            ");

                List<Reservation> queuedReservations = (List<Reservation>) request.getAttribute("queuedReservations");
                if (queuedReservations != null && !queuedReservations.isEmpty()) {
            
      out.write("\r\n");
      out.write("\r\n");
      out.write("            <div class=\"message info\">\r\n");
      out.write("                <i class=\"fas fa-info-circle\"></i>\r\n");
      out.write("                Showing ");
      out.print( queuedReservations.size() );
      out.write(" reservation(s) in queue, sorted by time using Merge Sort algorithm\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <div style=\"overflow-x: auto;\">\r\n");
      out.write("                <table class=\"queue-table\">\r\n");
      out.write("                    <thead>\r\n");
      out.write("                        <tr>\r\n");
      out.write("                            <th><i class=\"fas fa-sort-numeric-down\"></i> Position</th>\r\n");
      out.write("                            <th><i class=\"fas fa-id-badge\"></i> ID</th>\r\n");
      out.write("                            <th><i class=\"fas fa-user\"></i> Customer</th>\r\n");
      out.write("                            <th><i class=\"fas fa-chair\"></i> Table</th>\r\n");
      out.write("                            <th><i class=\"fas fa-clock\"></i> Time</th>\r\n");
      out.write("                            <th><i class=\"fas fa-phone\"></i> Contact</th>\r\n");
      out.write("                            <th><i class=\"fas fa-info-circle\"></i> Status</th>\r\n");
      out.write("                            <th><i class=\"fas fa-cogs\"></i> Actions</th>\r\n");
      out.write("                        </tr>\r\n");
      out.write("                    </thead>\r\n");
      out.write("                    <tbody>\r\n");
      out.write("                        ");

                            for (int i = 0; i < queuedReservations.size(); i++) {
                                Reservation reservation = queuedReservations.get(i);
                                String priorityClass = i < 3 ? "priority-high" : (i < 6 ? "priority-medium" : "priority-low");
                        
      out.write("\r\n");
      out.write("                        <tr>\r\n");
      out.write("                            <td>\r\n");
      out.write("                                <div class=\"queue-position\">\r\n");
      out.write("                                    <span class=\"priority-indicator ");
      out.print( priorityClass );
      out.write("\"></span>\r\n");
      out.write("                                    #");
      out.print( i + 1 );
      out.write("\r\n");
      out.write("                                </div>\r\n");
      out.write("                            </td>\r\n");
      out.write("                            <td><strong>#");
      out.print( reservation.getId() );
      out.write("</strong></td>\r\n");
      out.write("                            <td>\r\n");
      out.write("                                <div class=\"customer-info\">\r\n");
      out.write("                                    <div class=\"customer-name\">\r\n");
      out.write("                                        <i class=\"fas fa-user-circle\"></i>\r\n");
      out.write("                                        ");
      out.print( reservation.getCustomerName() != null ? reservation.getCustomerName() : "Guest" );
      out.write("\r\n");
      out.write("                                    </div>\r\n");
      out.write("                                    <div class=\"customer-details\">\r\n");
      out.write("                                        User ID: ");
      out.print( reservation.getUserId() );
      out.write("\r\n");
      out.write("                                        ");
 if (reservation.getCustomerEmail() != null && !reservation.getCustomerEmail().isEmpty()) { 
      out.write("\r\n");
      out.write("                                        <br><i class=\"fas fa-envelope\"></i> ");
      out.print( reservation.getCustomerEmail() );
      out.write("\r\n");
      out.write("                                        ");
 } 
      out.write("\r\n");
      out.write("                                    </div>\r\n");
      out.write("                                </div>\r\n");
      out.write("                            </td>\r\n");
      out.write("                            <td>\r\n");
      out.write("                                <div class=\"table-info\">\r\n");
      out.write("                                    <i class=\"fas fa-chair\"></i>\r\n");
      out.write("                                    <strong>Table ");
      out.print( reservation.getTableId() );
      out.write("</strong>\r\n");
      out.write("                                </div>\r\n");
      out.write("                            </td>\r\n");
      out.write("                            <td>\r\n");
      out.write("                                <div>\r\n");
      out.write("                                    <i class=\"fas fa-calendar\"></i>\r\n");
      out.write("                                    ");
      out.print( reservation.getFormattedReservationTime() );
      out.write("\r\n");
      out.write("                                </div>\r\n");
      out.write("                                ");
 if (reservation.isFutureReservation()) { 
      out.write("\r\n");
      out.write("                                <div class=\"time-remaining\">\r\n");
      out.write("                                    <i class=\"fas fa-hourglass-half\"></i> Future reservation\r\n");
      out.write("                                </div>\r\n");
      out.write("                                ");
 } else { 
      out.write("\r\n");
      out.write("                                <div class=\"time-remaining\" style=\"color: var(--error);\">\r\n");
      out.write("                                    <i class=\"fas fa-exclamation-triangle\"></i> Past due\r\n");
      out.write("                                </div>\r\n");
      out.write("                                ");
 } 
      out.write("\r\n");
      out.write("                            </td>\r\n");
      out.write("                            <td>\r\n");
      out.write("                                ");
 if (reservation.getCustomerPhone() != null && !reservation.getCustomerPhone().isEmpty()) { 
      out.write("\r\n");
      out.write("                                <i class=\"fas fa-phone\"></i> ");
      out.print( reservation.getCustomerPhone() );
      out.write("\r\n");
      out.write("                                ");
 } else { 
      out.write("\r\n");
      out.write("                                <span style=\"color: var(--gray);\">No phone</span>\r\n");
      out.write("                                ");
 } 
      out.write("\r\n");
      out.write("                            </td>\r\n");
      out.write("                            <td>\r\n");
      out.write("                                <span class=\"status-badge status-");
      out.print( reservation.getStatus() );
      out.write("\">\r\n");
      out.write("                                    ");
 if ("pending".equals(reservation.getStatus())) { 
      out.write("\r\n");
      out.write("                                        <i class=\"fas fa-clock\"></i>\r\n");
      out.write("                                    ");
 } else if ("confirmed".equals(reservation.getStatus())) { 
      out.write("\r\n");
      out.write("                                        <i class=\"fas fa-check\"></i>\r\n");
      out.write("                                    ");
 } else { 
      out.write("\r\n");
      out.write("                                        <i class=\"fas fa-times\"></i>\r\n");
      out.write("                                    ");
 } 
      out.write("\r\n");
      out.write("                                    ");
      out.print( reservation.getStatus().toUpperCase() );
      out.write("\r\n");
      out.write("                                </span>\r\n");
      out.write("                            </td>\r\n");
      out.write("                            <td>\r\n");
      out.write("                                <div class=\"action-buttons\">\r\n");
      out.write("                                    ");

                                        Integer currentUserId = (Integer) session.getAttribute("userId");
                                        if (currentUserId != null && currentUserId == reservation.getUserId()) {
                                    
      out.write("\r\n");
      out.write("                                    <form action=\"reservationQueue\" method=\"post\" style=\"display: inline;\" class=\"remove-form\">\r\n");
      out.write("                                        <input type=\"hidden\" name=\"action\" value=\"removeFromQueue\">\r\n");
      out.write("                                        <input type=\"hidden\" name=\"reservationId\" value=\"");
      out.print( reservation.getId() );
      out.write("\">\r\n");
      out.write("                                        <button type=\"submit\" class=\"btn btn-danger btn-sm\"\r\n");
      out.write("                                                onclick=\"return confirm('Remove your reservation from queue?')\">\r\n");
      out.write("                                            <i class=\"fas fa-trash\"></i> Remove\r\n");
      out.write("                                        </button>\r\n");
      out.write("                                    </form>\r\n");
      out.write("                                    ");
 } 
      out.write("\r\n");
      out.write("\r\n");
      out.write("                                    ");
 if (reservation.getSpecialRequests() != null && !reservation.getSpecialRequests().isEmpty()) { 
      out.write("\r\n");
      out.write("                                    <button type=\"button\" class=\"btn btn-warning btn-sm\"\r\n");
      out.write("                                            onclick=\"showSpecialRequests('");
      out.print( reservation.getSpecialRequests().replace("'", "\\'") );
      out.write("')\">\r\n");
      out.write("                                        <i class=\"fas fa-comment\"></i> Notes\r\n");
      out.write("                                    </button>\r\n");
      out.write("                                    ");
 } 
      out.write("\r\n");
      out.write("                                </div>\r\n");
      out.write("                            </td>\r\n");
      out.write("                        </tr>\r\n");
      out.write("                        ");

                            }
                        
      out.write("\r\n");
      out.write("                    </tbody>\r\n");
      out.write("                </table>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            ");
 } else { 
      out.write("\r\n");
      out.write("\r\n");
      out.write("            <div class=\"empty-state\">\r\n");
      out.write("                <i class=\"fas fa-inbox\"></i>\r\n");
      out.write("                <h3>Queue is Empty</h3>\r\n");
      out.write("                <p>No reservations are currently in the queue.</p>\r\n");
      out.write("                <p style=\"margin-top: 15px;\">\r\n");
      out.write("                    <small>The queue uses a custom implementation with merge sort for optimal time-based ordering.</small>\r\n");
      out.write("                </p>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            ");
 } 
      out.write("\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("        <!-- Queue Operations -->\r\n");
      out.write("        <div class=\"section-card\">\r\n");
      out.write("            <div class=\"section-header\">\r\n");
      out.write("                <i class=\"fas fa-cogs\"></i>\r\n");
      out.write("                <h3>Queue Operations</h3>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <div class=\"operations-grid\">\r\n");
      out.write("                <form action=\"reservationQueue\" method=\"post\" style=\"display: contents;\">\r\n");
      out.write("                    <input type=\"hidden\" name=\"action\" value=\"processNext\">\r\n");
      out.write("                    <button type=\"submit\" class=\"btn btn-success\" ");
      out.print( queuedReservations == null || queuedReservations.isEmpty() ? "disabled" : "" );
      out.write(">\r\n");
      out.write("                        <i class=\"fas fa-arrow-right\"></i> Process Next\r\n");
      out.write("                    </button>\r\n");
      out.write("                </form>\r\n");
      out.write("\r\n");
      out.write("                ");
 if (session.getAttribute("isAdmin") != null && (Boolean) session.getAttribute("isAdmin")) { 
      out.write("\r\n");
      out.write("                <a href=\"admin/queueManagement\" class=\"btn btn-warning\">\r\n");
      out.write("                    <i class=\"fas fa-cog\"></i> Admin Management\r\n");
      out.write("                </a>\r\n");
      out.write("                ");
 } 
      out.write("\r\n");
      out.write("\r\n");
      out.write("                <a href=\"userTables\" class=\"btn btn-primary\">\r\n");
      out.write("                    <i class=\"fas fa-chair\"></i> View Tables\r\n");
      out.write("                </a>\r\n");
      out.write("\r\n");
      out.write("                <a href=\"categoryMenu\" class=\"btn btn-secondary\">\r\n");
      out.write("                    <i class=\"fas fa-utensils\"></i> View Menu\r\n");
      out.write("                </a>\r\n");
      out.write("\r\n");
      out.write("                <button type=\"button\" class=\"btn btn-primary\" onclick=\"window.location.reload()\">\r\n");
      out.write("                    <i class=\"fas fa-sync-alt\"></i> Refresh Queue\r\n");
      out.write("                </button>\r\n");
      out.write("\r\n");
      out.write("                <button type=\"button\" class=\"btn btn-warning\" onclick=\"showQueueInfo()\">\r\n");
      out.write("                    <i class=\"fas fa-info-circle\"></i> Queue Info\r\n");
      out.write("                </button>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <!-- Technical Information -->\r\n");
      out.write("            <div style=\"margin-top: 30px; padding: 20px; background: var(--light); border-radius: 10px; border-left: 5px solid var(--primary);\">\r\n");
      out.write("                <h4><i class=\"fas fa-graduation-cap\"></i> Data Structure & Algorithm Implementation</h4>\r\n");
      out.write("                <div style=\"display: grid; grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); gap: 20px; margin-top: 15px;\">\r\n");
      out.write("                    <div>\r\n");
      out.write("                        <h5><i class=\"fas fa-layer-group\"></i> Custom Queue Features:</h5>\r\n");
      out.write("                        <ul style=\"margin: 10px 0; padding-left: 20px;\">\r\n");
      out.write("                            <li>Array-based circular queue implementation</li>\r\n");
      out.write("                            <li>FIFO (First In, First Out) operations</li>\r\n");
      out.write("                            <li>Dynamic size management with overflow protection</li>\r\n");
      out.write("                            <li>Efficient enqueue/dequeue operations</li>\r\n");
      out.write("                        </ul>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div>\r\n");
      out.write("                        <h5><i class=\"fas fa-sort-amount-down\"></i> Merge Sort Algorithm:</h5>\r\n");
      out.write("                        <ul style=\"margin: 10px 0; padding-left: 20px;\">\r\n");
      out.write("                            <li>O(n log n) time complexity sorting</li>\r\n");
      out.write("                            <li>Stable sort by reservation time</li>\r\n");
      out.write("                            <li>Divide and conquer approach</li>\r\n");
      out.write("                            <li>Custom comparator for DateTime objects</li>\r\n");
      out.write("                        </ul>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("                <p style=\"margin-top: 15px; font-style: italic; color: var(--gray);\">\r\n");
      out.write("                    <strong>Note:</strong> This implementation demonstrates custom data structures and algorithms\r\n");
      out.write("                    built from scratch without using Java Collections Framework, specifically designed for\r\n");
      out.write("                    academic evaluation of DSA concepts.\r\n");
      out.write("                </p>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <!-- Modal for Special Requests -->\r\n");
      out.write("    <div id=\"specialRequestsModal\" style=\"display: none; position: fixed; top: 0; left: 0; width: 100%; height: 100%; background: rgba(0,0,0,0.5); z-index: 1000;\">\r\n");
      out.write("        <div style=\"position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); background: white; padding: 30px; border-radius: 10px; max-width: 500px; width: 90%;\">\r\n");
      out.write("            <h3><i class=\"fas fa-comment\"></i> Special Requests</h3>\r\n");
      out.write("            <p id=\"specialRequestsContent\" style=\"margin: 15px 0; padding: 15px; background: var(--light); border-radius: 5px;\"></p>\r\n");
      out.write("            <button onclick=\"closeSpecialRequests()\" class=\"btn btn-primary\">\r\n");
      out.write("                <i class=\"fas fa-times\"></i> Close\r\n");
      out.write("            </button>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <script>\r\n");
      out.write("        // Set minimum datetime to current time\r\n");
      out.write("        document.addEventListener('DOMContentLoaded', function() {\r\n");
      out.write("            const now = new Date();\r\n");
      out.write("            now.setMinutes(now.getMinutes() - now.getTimezoneOffset());\r\n");
      out.write("            const dateTimeInput = document.getElementById('reservationTime');\r\n");
      out.write("            if (dateTimeInput) {\r\n");
      out.write("                dateTimeInput.min = now.toISOString().slice(0, 16);\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            // Auto-focus first form field\r\n");
      out.write("            const firstInput = document.getElementById('tableId');\r\n");
      out.write("            if (firstInput) {\r\n");
      out.write("                firstInput.focus();\r\n");
      out.write("            }\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("        // Auto-refresh functionality\r\n");
      out.write("        let refreshTimeout;\r\n");
      out.write("        function startAutoRefresh() {\r\n");
      out.write("            const indicator = document.getElementById('refreshIndicator');\r\n");
      out.write("            indicator.classList.add('show');\r\n");
      out.write("\r\n");
      out.write("            refreshTimeout = setTimeout(function() {\r\n");
      out.write("                indicator.classList.remove('show');\r\n");
      out.write("                window.location.reload();\r\n");
      out.write("            }, 30000); // 30 seconds\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        // Start auto-refresh on page load\r\n");
      out.write("        startAutoRefresh();\r\n");
      out.write("\r\n");
      out.write("        // Form submission with loading state\r\n");
      out.write("        document.getElementById('addReservationForm').addEventListener('submit', function(e) {\r\n");
      out.write("            const submitBtn = document.getElementById('submitBtn');\r\n");
      out.write("            submitBtn.disabled = true;\r\n");
      out.write("            submitBtn.innerHTML = '<span class=\"loading\"></span> Adding to Queue...';\r\n");
      out.write("\r\n");
      out.write("            // Re-enable button after 5 seconds as fallback\r\n");
      out.write("            setTimeout(() => {\r\n");
      out.write("                submitBtn.disabled = false;\r\n");
      out.write("                submitBtn.innerHTML = '<i class=\"fas fa-plus\"></i> Add to Queue';\r\n");
      out.write("            }, 5000);\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("        // Remove form submissions\r\n");
      out.write("        document.querySelectorAll('.remove-form').forEach(form => {\r\n");
      out.write("            form.addEventListener('submit', function(e) {\r\n");
      out.write("                const button = this.querySelector('button');\r\n");
      out.write("                button.disabled = true;\r\n");
      out.write("                button.innerHTML = '<span class=\"loading\"></span> Removing...';\r\n");
      out.write("            });\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("        // Special requests modal functions\r\n");
      out.write("        function showSpecialRequests(requests) {\r\n");
      out.write("            document.getElementById('specialRequestsContent').textContent = requests;\r\n");
      out.write("            document.getElementById('specialRequestsModal').style.display = 'block';\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        function closeSpecialRequests() {\r\n");
      out.write("            document.getElementById('specialRequestsModal').style.display = 'none';\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        // Queue information modal\r\n");
      out.write("        function showQueueInfo() {\r\n");
      out.write("            const queueSize = ");
      out.print( request.getAttribute("queueSize") != null ? request.getAttribute("queueSize") : 0 );
      out.write(";\r\n");
      out.write("            const isEmpty = ");
      out.print( request.getAttribute("queueEmpty") );
      out.write(";\r\n");
      out.write("            const isFull = ");
      out.print( request.getAttribute("queueFull") );
      out.write(";\r\n");
      out.write("\r\n");
      out.write("            let message = `Queue Information:\\n\\n`;\r\n");
      out.write("            message += `Current Size: ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${queueSize}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(" reservations\\n`;\r\n");
      out.write("            message += `Status: ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${isEmpty ? 'Empty' : (isFull ? 'Full' : 'Active')}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\\n`;\r\n");
      out.write("            message += `Implementation: Custom Queue + Merge Sort\\n`;\r\n");
      out.write("            message += `Auto-refresh: Every 30 seconds\\n\\n`;\r\n");
      out.write("            message += `Data Structures Used:\\n`;\r\n");
      out.write("            message += `• Array-based circular queue\\n`;\r\n");
      out.write("            message += `• Merge sort for time-based ordering\\n`;\r\n");
      out.write("            message += `• Custom comparators for DateTime objects`;\r\n");
      out.write("\r\n");
      out.write("            alert(message);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        // Keyboard shortcuts\r\n");
      out.write("        document.addEventListener('keydown', function(e) {\r\n");
      out.write("            if (e.ctrlKey || e.metaKey) {\r\n");
      out.write("                switch(e.key) {\r\n");
      out.write("                    case 'r':\r\n");
      out.write("                        e.preventDefault();\r\n");
      out.write("                        window.location.reload();\r\n");
      out.write("                        break;\r\n");
      out.write("                    case 'n':\r\n");
      out.write("                        e.preventDefault();\r\n");
      out.write("                        document.getElementById('tableId').focus();\r\n");
      out.write("                        break;\r\n");
      out.write("                    case 'i':\r\n");
      out.write("                        e.preventDefault();\r\n");
      out.write("                        showQueueInfo();\r\n");
      out.write("                        break;\r\n");
      out.write("                }\r\n");
      out.write("            }\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("        // Close modal when clicking outside\r\n");
      out.write("        document.getElementById('specialRequestsModal').addEventListener('click', function(e) {\r\n");
      out.write("            if (e.target === this) {\r\n");
      out.write("                closeSpecialRequests();\r\n");
      out.write("            }\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("        // Form validation enhancements\r\n");
      out.write("        document.getElementById('customerName').addEventListener('input', function() {\r\n");
      out.write("            this.value = this.value.replace(/[^a-zA-Z\\s]/g, '');\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("        document.getElementById('customerPhone').addEventListener('input', function() {\r\n");
      out.write("            this.value = this.value.replace(/[^0-9+\\-\\s()]/g, '');\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("        // Success/Error message auto-hide\r\n");
      out.write("        setTimeout(function() {\r\n");
      out.write("            const messages = document.querySelectorAll('.message');\r\n");
      out.write("            messages.forEach(message => {\r\n");
      out.write("                message.style.opacity = '0';\r\n");
      out.write("                setTimeout(() => message.remove(), 300);\r\n");
      out.write("            });\r\n");
      out.write("        }, 5000);\r\n");
      out.write("\r\n");
      out.write("        // Smooth scroll to top when refreshing\r\n");
      out.write("        function scrollToTop() {\r\n");
      out.write("            window.scrollTo({\r\n");
      out.write("                top: 0,\r\n");
      out.write("                behavior: 'smooth'\r\n");
      out.write("            });\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        // Connection status indicator\r\n");
      out.write("        window.addEventListener('online', function() {\r\n");
      out.write("            console.log('Connection restored');\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("        window.addEventListener('offline', function() {\r\n");
      out.write("            clearTimeout(refreshTimeout);\r\n");
      out.write("            console.log('Connection lost - auto-refresh paused');\r\n");
      out.write("        });\r\n");
      out.write("    </script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
