/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.41
 * Generated at: 2025-05-26 17:24:22 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import java.util.*;
import com.example.restaurant_table_reservation.model.Reservation;
import com.example.restaurant_table_reservation.model.User;
import com.example.restaurant_table_reservation.model.Table;
import com.example.restaurant_table_reservation.service.UserService;
import com.example.restaurant_table_reservation.service.TableService;

public final class queueManagement_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(6);
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(7);
    _jspx_imports_classes.add("com.example.restaurant_table_reservation.service.UserService");
    _jspx_imports_classes.add("com.example.restaurant_table_reservation.model.Table");
    _jspx_imports_classes.add("com.example.restaurant_table_reservation.model.User");
    _jspx_imports_classes.add("com.example.restaurant_table_reservation.model.Reservation");
    _jspx_imports_classes.add("com.example.restaurant_table_reservation.service.TableService");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <title>Admin Queue Management</title>\r\n");
      out.write("    <style>\r\n");
      out.write("        :root {\r\n");
      out.write("            --primary: #5c6bc0;\r\n");
      out.write("            --primary-dark: #3949ab;\r\n");
      out.write("            --accent: #ff7043;\r\n");
      out.write("            --light: #f8f9fa;\r\n");
      out.write("            --dark: #212529;\r\n");
      out.write("            --gray: #6c757d;\r\n");
      out.write("            --border: #e0e0e0;\r\n");
      out.write("            --success: #66bb6a;\r\n");
      out.write("            --warning: #ffa726;\r\n");
      out.write("            --error: #ef5350;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        * {\r\n");
      out.write("            margin: 0;\r\n");
      out.write("            padding: 0;\r\n");
      out.write("            box-sizing: border-box;\r\n");
      out.write("            font-family: 'Roboto', -apple-system, BlinkMacSystemFont, 'Segoe UI', Oxygen, Ubuntu, Cantarell, sans-serif;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        body {\r\n");
      out.write("            background: var(--light);\r\n");
      out.write("            color: var(--dark);\r\n");
      out.write("            line-height: 1.6;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .admin-container {\r\n");
      out.write("            max-width: 1400px;\r\n");
      out.write("            margin: 0 auto;\r\n");
      out.write("            padding: 20px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .admin-header {\r\n");
      out.write("            background: linear-gradient(135deg, var(--primary), var(--primary-dark));\r\n");
      out.write("            color: white;\r\n");
      out.write("            padding: 30px;\r\n");
      out.write("            border-radius: 10px;\r\n");
      out.write("            margin-bottom: 30px;\r\n");
      out.write("            text-align: center;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .admin-header h1 {\r\n");
      out.write("            font-size: 2.5rem;\r\n");
      out.write("            margin-bottom: 10px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .admin-header p {\r\n");
      out.write("            font-size: 1.1rem;\r\n");
      out.write("            opacity: 0.9;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .stats-grid {\r\n");
      out.write("            display: grid;\r\n");
      out.write("            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\r\n");
      out.write("            gap: 20px;\r\n");
      out.write("            margin-bottom: 30px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .stat-card {\r\n");
      out.write("            background: white;\r\n");
      out.write("            border-radius: 10px;\r\n");
      out.write("            padding: 25px;\r\n");
      out.write("            box-shadow: 0 4px 15px rgba(0,0,0,0.1);\r\n");
      out.write("            transition: transform 0.3s;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .stat-card:hover {\r\n");
      out.write("            transform: translateY(-5px);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .stat-card-header {\r\n");
      out.write("            display: flex;\r\n");
      out.write("            justify-content: space-between;\r\n");
      out.write("            align-items: center;\r\n");
      out.write("            margin-bottom: 15px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .stat-card-icon {\r\n");
      out.write("            width: 50px;\r\n");
      out.write("            height: 50px;\r\n");
      out.write("            border-radius: 50%;\r\n");
      out.write("            display: flex;\r\n");
      out.write("            align-items: center;\r\n");
      out.write("            justify-content: center;\r\n");
      out.write("            color: white;\r\n");
      out.write("            font-size: 1.5rem;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .stat-card-icon.queue-size {\r\n");
      out.write("            background: linear-gradient(135deg, var(--primary), var(--primary-dark));\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .stat-card-icon.pending {\r\n");
      out.write("            background: linear-gradient(135deg, var(--warning), #ff8f00);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .stat-card-icon.confirmed {\r\n");
      out.write("            background: linear-gradient(135deg, var(--success), #388e3c);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .stat-card-icon.operations {\r\n");
      out.write("            background: linear-gradient(135deg, var(--accent), #e64a19);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .stat-card h3 {\r\n");
      out.write("            color: var(--gray);\r\n");
      out.write("            font-size: 0.9rem;\r\n");
      out.write("            font-weight: 500;\r\n");
      out.write("            text-transform: uppercase;\r\n");
      out.write("            letter-spacing: 0.5px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .stat-card .stat-number {\r\n");
      out.write("            font-size: 2rem;\r\n");
      out.write("            font-weight: 700;\r\n");
      out.write("            color: var(--dark);\r\n");
      out.write("            margin: 10px 0;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .control-panel {\r\n");
      out.write("            background: white;\r\n");
      out.write("            border-radius: 10px;\r\n");
      out.write("            padding: 25px;\r\n");
      out.write("            margin-bottom: 30px;\r\n");
      out.write("            box-shadow: 0 4px 15px rgba(0,0,0,0.1);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .control-panel h3 {\r\n");
      out.write("            margin-bottom: 20px;\r\n");
      out.write("            color: var(--primary);\r\n");
      out.write("            border-bottom: 2px solid var(--border);\r\n");
      out.write("            padding-bottom: 10px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .btn-grid {\r\n");
      out.write("            display: grid;\r\n");
      out.write("            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\r\n");
      out.write("            gap: 15px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .btn {\r\n");
      out.write("            padding: 12px 20px;\r\n");
      out.write("            border: none;\r\n");
      out.write("            border-radius: 8px;\r\n");
      out.write("            cursor: pointer;\r\n");
      out.write("            font-size: 14px;\r\n");
      out.write("            font-weight: 500;\r\n");
      out.write("            transition: all 0.3s;\r\n");
      out.write("            text-decoration: none;\r\n");
      out.write("            display: flex;\r\n");
      out.write("            align-items: center;\r\n");
      out.write("            justify-content: center;\r\n");
      out.write("            gap: 8px;\r\n");
      out.write("            color: white;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .btn-primary {\r\n");
      out.write("            background: var(--primary);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .btn-primary:hover {\r\n");
      out.write("            background: var(--primary-dark);\r\n");
      out.write("            transform: translateY(-2px);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .btn-success {\r\n");
      out.write("            background: var(--success);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .btn-warning {\r\n");
      out.write("            background: var(--warning);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .btn-danger {\r\n");
      out.write("            background: var(--error);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .btn-secondary {\r\n");
      out.write("            background: var(--gray);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .queue-section {\r\n");
      out.write("            background: white;\r\n");
      out.write("            border-radius: 10px;\r\n");
      out.write("            padding: 25px;\r\n");
      out.write("            box-shadow: 0 4px 15px rgba(0,0,0,0.1);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .queue-table {\r\n");
      out.write("            width: 100%;\r\n");
      out.write("            border-collapse: collapse;\r\n");
      out.write("            margin-top: 20px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .queue-table th,\r\n");
      out.write("        .queue-table td {\r\n");
      out.write("            padding: 15px 12px;\r\n");
      out.write("            text-align: left;\r\n");
      out.write("            border-bottom: 1px solid var(--border);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .queue-table th {\r\n");
      out.write("            background: var(--primary);\r\n");
      out.write("            color: white;\r\n");
      out.write("            font-weight: 500;\r\n");
      out.write("            position: sticky;\r\n");
      out.write("            top: 0;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .queue-table tr:hover {\r\n");
      out.write("            background: var(--light);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .status-badge {\r\n");
      out.write("            padding: 4px 12px;\r\n");
      out.write("            border-radius: 20px;\r\n");
      out.write("            font-size: 12px;\r\n");
      out.write("            font-weight: 600;\r\n");
      out.write("            text-transform: uppercase;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .status-pending {\r\n");
      out.write("            background: #fff3e0;\r\n");
      out.write("            color: #e65100;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .status-confirmed {\r\n");
      out.write("            background: #e8f5e9;\r\n");
      out.write("            color: #2e7d32;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .status-cancelled {\r\n");
      out.write("            background: #ffebee;\r\n");
      out.write("            color: #c62828;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .action-buttons {\r\n");
      out.write("            display: flex;\r\n");
      out.write("            gap: 8px;\r\n");
      out.write("            flex-wrap: wrap;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .btn-sm {\r\n");
      out.write("            padding: 6px 12px;\r\n");
      out.write("            font-size: 12px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .message {\r\n");
      out.write("            padding: 15px;\r\n");
      out.write("            border-radius: 8px;\r\n");
      out.write("            margin-bottom: 20px;\r\n");
      out.write("            display: flex;\r\n");
      out.write("            align-items: center;\r\n");
      out.write("            gap: 10px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .message.success {\r\n");
      out.write("            background: #e8f5e9;\r\n");
      out.write("            color: #2e7d32;\r\n");
      out.write("            border-left: 4px solid var(--success);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .message.error {\r\n");
      out.write("            background: #ffebee;\r\n");
      out.write("            color: #c62828;\r\n");
      out.write("            border-left: 4px solid var(--error);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .empty-state {\r\n");
      out.write("            text-align: center;\r\n");
      out.write("            padding: 60px 20px;\r\n");
      out.write("            color: var(--gray);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .empty-state i {\r\n");
      out.write("            font-size: 4rem;\r\n");
      out.write("            margin-bottom: 20px;\r\n");
      out.write("            color: var(--border);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .nav-breadcrumb {\r\n");
      out.write("            margin-bottom: 20px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .nav-breadcrumb a {\r\n");
      out.write("            color: var(--primary);\r\n");
      out.write("            text-decoration: none;\r\n");
      out.write("            font-weight: 500;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .nav-breadcrumb a:hover {\r\n");
      out.write("            text-decoration: underline;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        @media (max-width: 768px) {\r\n");
      out.write("            .btn-grid {\r\n");
      out.write("                grid-template-columns: 1fr;\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            .stats-grid {\r\n");
      out.write("                grid-template-columns: 1fr;\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            .queue-table {\r\n");
      out.write("                font-size: 14px;\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            .action-buttons {\r\n");
      out.write("                flex-direction: column;\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("    </style>\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<div class=\"admin-container\">\r\n");
      out.write("    <!-- Navigation Breadcrumb -->\r\n");
      out.write("    <div class=\"nav-breadcrumb\">\r\n");
      out.write("        <a href=\"dashboard\"><i class=\"fas fa-home\"></i> Admin Dashboard</a>\r\n");
      out.write("        <span> / </span>\r\n");
      out.write("        <span>Queue Management</span>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <!-- Admin Header -->\r\n");
      out.write("    <div class=\"admin-header\">\r\n");
      out.write("        <h1><i class=\"fas fa-cogs\"></i> Queue Management System</h1>\r\n");
      out.write("        <p>Manage and monitor reservation queue with custom data structures</p>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <!-- Display Messages -->\r\n");
      out.write("    ");
 if (request.getAttribute("message") != null) { 
      out.write("\r\n");
      out.write("        <div class=\"message success\">\r\n");
      out.write("            <i class=\"fas fa-check-circle\"></i>\r\n");
      out.write("            ");
      out.print( request.getAttribute("message") );
      out.write("\r\n");
      out.write("        </div>\r\n");
      out.write("    ");
 } 
      out.write("\r\n");
      out.write("\r\n");
      out.write("    ");
 if (request.getAttribute("error") != null) { 
      out.write("\r\n");
      out.write("        <div class=\"message error\">\r\n");
      out.write("            <i class=\"fas fa-exclamation-circle\"></i>\r\n");
      out.write("            ");
      out.print( request.getAttribute("error") );
      out.write("\r\n");
      out.write("        </div>\r\n");
      out.write("    ");
 } 
      out.write("\r\n");
      out.write("\r\n");
      out.write("    <!-- Statistics Grid -->\r\n");
      out.write("    <div class=\"stats-grid\">\r\n");
      out.write("        <div class=\"stat-card\">\r\n");
      out.write("            <div class=\"stat-card-header\">\r\n");
      out.write("                <h3>Queue Size</h3>\r\n");
      out.write("                <div class=\"stat-card-icon queue-size\">\r\n");
      out.write("                    <i class=\"fas fa-list\"></i>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"stat-number\">");
      out.print( request.getAttribute("queueSize") );
      out.write("</div>\r\n");
      out.write("            <p>Total reservations in queue</p>\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("        <div class=\"stat-card\">\r\n");
      out.write("            <div class=\"stat-card-header\">\r\n");
      out.write("                <h3>Queue Status</h3>\r\n");
      out.write("                <div class=\"stat-card-icon pending\">\r\n");
      out.write("                    <i class=\"fas fa-clock\"></i>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"stat-number\">\r\n");
      out.write("                ");
      out.print( (Boolean) request.getAttribute("queueEmpty") ? "Empty" : "Active" );
      out.write("\r\n");
      out.write("            </div>\r\n");
      out.write("            <p>Current queue state</p>\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("        <div class=\"stat-card\">\r\n");
      out.write("            <div class=\"stat-card-header\">\r\n");
      out.write("                <h3>Capacity</h3>\r\n");
      out.write("                <div class=\"stat-card-icon confirmed\">\r\n");
      out.write("                    <i class=\"fas fa-chart-pie\"></i>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"stat-number\">\r\n");
      out.write("                ");
      out.print( (Boolean) request.getAttribute("queueFull") ? "Full" : "Available" );
      out.write("\r\n");
      out.write("            </div>\r\n");
      out.write("            <p>Queue capacity status</p>\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("        <div class=\"stat-card\">\r\n");
      out.write("            <div class=\"stat-card-header\">\r\n");
      out.write("                <h3>DSA Features</h3>\r\n");
      out.write("                <div class=\"stat-card-icon operations\">\r\n");
      out.write("                    <i class=\"fas fa-code\"></i>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"stat-number\">Custom</div>\r\n");
      out.write("            <p>Queue + Merge Sort</p>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <!-- Control Panel -->\r\n");
      out.write("    <div class=\"control-panel\">\r\n");
      out.write("        <h3><i class=\"fas fa-control\"></i> Queue Operations</h3>\r\n");
      out.write("        <div class=\"btn-grid\">\r\n");
      out.write("            <form action=\"queueManagement\" method=\"post\" style=\"display: contents;\">\r\n");
      out.write("                <input type=\"hidden\" name=\"action\" value=\"processNext\">\r\n");
      out.write("                <button type=\"submit\" class=\"btn btn-success\">\r\n");
      out.write("                    <i class=\"fas fa-arrow-right\"></i> Process Next Reservation\r\n");
      out.write("                </button>\r\n");
      out.write("            </form>\r\n");
      out.write("\r\n");
      out.write("            <form action=\"queueManagement\" method=\"post\" style=\"display: contents;\">\r\n");
      out.write("                <input type=\"hidden\" name=\"action\" value=\"reorderQueue\">\r\n");
      out.write("                <button type=\"submit\" class=\"btn btn-primary\">\r\n");
      out.write("                    <i class=\"fas fa-sort\"></i> Sort Queue (Merge Sort)\r\n");
      out.write("                </button>\r\n");
      out.write("            </form>\r\n");
      out.write("\r\n");
      out.write("            <form action=\"queueManagement\" method=\"post\" style=\"display: contents;\">\r\n");
      out.write("                <input type=\"hidden\" name=\"action\" value=\"viewStatistics\">\r\n");
      out.write("                <button type=\"submit\" class=\"btn btn-warning\">\r\n");
      out.write("                    <i class=\"fas fa-chart-bar\"></i> View Statistics\r\n");
      out.write("                </button>\r\n");
      out.write("            </form>\r\n");
      out.write("\r\n");
      out.write("            <form action=\"queueManagement\" method=\"post\" style=\"display: contents;\"\r\n");
      out.write("                  onsubmit=\"return confirm('Are you sure you want to clear the entire queue?')\">\r\n");
      out.write("                <input type=\"hidden\" name=\"action\" value=\"clearQueue\">\r\n");
      out.write("                <button type=\"submit\" class=\"btn btn-danger\">\r\n");
      out.write("                    <i class=\"fas fa-trash\"></i> Clear Queue\r\n");
      out.write("                </button>\r\n");
      out.write("            </form>\r\n");
      out.write("\r\n");
      out.write("            <form action=\"queueManagement\" method=\"post\" style=\"display: contents;\">\r\n");
      out.write("                <input type=\"hidden\" name=\"action\" value=\"demonstrateSort\">\r\n");
      out.write("                <button type=\"submit\" class=\"btn btn-primary\">\r\n");
      out.write("                    <i class=\"fas fa-play\"></i> Demonstrate Sort\r\n");
      out.write("                </button>\r\n");
      out.write("            </form>\r\n");
      out.write("\r\n");
      out.write("            <form action=\"queueManagement\" method=\"post\" style=\"display: contents;\">\r\n");
      out.write("                <input type=\"hidden\" name=\"action\" value=\"sortReservations\">\r\n");
      out.write("                <button type=\"submit\" class=\"btn btn-primary\">\r\n");
      out.write("                    <i class=\"fas fa-sort-amount-down\"></i> Sort All Reservations\r\n");
      out.write("                </button>\r\n");
      out.write("            </form>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <!-- Queue Display -->\r\n");
      out.write("    <div class=\"queue-section\">\r\n");
      out.write("        <h3><i class=\"fas fa-list-ol\"></i> Current Reservation Queue</h3>\r\n");
      out.write("        <p style=\"margin-bottom: 20px; color: var(--gray);\">\r\n");
      out.write("            <strong>Data Structure:</strong> Custom Queue Implementation with Merge Sort Algorithm\r\n");
      out.write("        </p>\r\n");
      out.write("\r\n");
      out.write("        ");

            List<Reservation> queuedReservations = (List<Reservation>) request.getAttribute("queuedReservations");
            UserService userService = (UserService) request.getAttribute("userService");
            TableService tableService = (TableService) request.getAttribute("tableService");

            if (queuedReservations != null && !queuedReservations.isEmpty()) {
        
      out.write("\r\n");
      out.write("\r\n");
      out.write("        <table class=\"queue-table\">\r\n");
      out.write("            <thead>\r\n");
      out.write("                <tr>\r\n");
      out.write("                    <th><i class=\"fas fa-hashtag\"></i> Position</th>\r\n");
      out.write("                    <th><i class=\"fas fa-id-card\"></i> Reservation ID</th>\r\n");
      out.write("                    <th><i class=\"fas fa-user\"></i> Customer</th>\r\n");
      out.write("                    <th><i class=\"fas fa-chair\"></i> Table</th>\r\n");
      out.write("                    <th><i class=\"fas fa-clock\"></i> Time</th>\r\n");
      out.write("                    <th><i class=\"fas fa-phone\"></i> Contact</th>\r\n");
      out.write("                    <th><i class=\"fas fa-info-circle\"></i> Status</th>\r\n");
      out.write("                    <th><i class=\"fas fa-cogs\"></i> Actions</th>\r\n");
      out.write("                </tr>\r\n");
      out.write("            </thead>\r\n");
      out.write("            <tbody>\r\n");
      out.write("                ");

                    for (int i = 0; i < queuedReservations.size(); i++) {
                        Reservation reservation = queuedReservations.get(i);

                        // Get user information
                        String customerName = reservation.getCustomerName();
                        if (customerName == null && userService != null) {
                            List<User> users = userService.getAllUsers();
                            for (User user : users) {
                                if (user.getId() == reservation.getUserId()) {
                                    customerName = user.getUsername();
                                    break;
                                }
                            }
                        }

                        // Get table information
                        String tableInfo = "Table " + reservation.getTableId();
                        if (tableService != null) {
                            Table[] tables = tableService.getAllTables();
                            for (Table table : tables) {
                                if (table.getId() == reservation.getTableId()) {
                                    tableInfo = "Table " + table.getNumber() + " (" + table.getCapacity() + " seats)";
                                    break;
                                }
                            }
                        }
                
      out.write("\r\n");
      out.write("                <tr>\r\n");
      out.write("                    <td><strong>");
      out.print( i + 1 );
      out.write("</strong></td>\r\n");
      out.write("                    <td>#");
      out.print( reservation.getId() );
      out.write("</td>\r\n");
      out.write("                    <td>\r\n");
      out.write("                        <strong>");
      out.print( customerName != null ? customerName : "Unknown" );
      out.write("</strong><br>\r\n");
      out.write("                        <small>User ID: ");
      out.print( reservation.getUserId() );
      out.write("</small>\r\n");
      out.write("                    </td>\r\n");
      out.write("                    <td>");
      out.print( tableInfo );
      out.write("</td>\r\n");
      out.write("                    <td>\r\n");
      out.write("                        <div>");
      out.print( reservation.getReservationTime() );
      out.write("</div>\r\n");
      out.write("                    </td>\r\n");
      out.write("                    <td>\r\n");
      out.write("                        ");
      out.print( reservation.getCustomerPhone() != null ? reservation.getCustomerPhone() : "N/A" );
      out.write("\r\n");
      out.write("                    </td>\r\n");
      out.write("                    <td>\r\n");
      out.write("                        <span class=\"status-badge status-");
      out.print( reservation.getStatus() );
      out.write("\">\r\n");
      out.write("                            ");
      out.print( reservation.getStatus().toUpperCase() );
      out.write("\r\n");
      out.write("                        </span>\r\n");
      out.write("                    </td>\r\n");
      out.write("                    <td>\r\n");
      out.write("                        <div class=\"action-buttons\">\r\n");
      out.write("                            ");
 if ("pending".equals(reservation.getStatus())) { 
      out.write("\r\n");
      out.write("                            <form action=\"queueManagement\" method=\"post\" style=\"display: inline;\">\r\n");
      out.write("                                <input type=\"hidden\" name=\"action\" value=\"confirmReservation\">\r\n");
      out.write("                                <input type=\"hidden\" name=\"reservationId\" value=\"");
      out.print( reservation.getId() );
      out.write("\">\r\n");
      out.write("                                <button type=\"submit\" class=\"btn btn-success btn-sm\">\r\n");
      out.write("                                    <i class=\"fas fa-check\"></i> Confirm\r\n");
      out.write("                                </button>\r\n");
      out.write("                            </form>\r\n");
      out.write("                            ");
 } 
      out.write("\r\n");
      out.write("\r\n");
      out.write("                            <form action=\"queueManagement\" method=\"post\" style=\"display: inline;\">\r\n");
      out.write("                                <input type=\"hidden\" name=\"action\" value=\"cancelReservation\">\r\n");
      out.write("                                <input type=\"hidden\" name=\"reservationId\" value=\"");
      out.print( reservation.getId() );
      out.write("\">\r\n");
      out.write("                                <button type=\"submit\" class=\"btn btn-danger btn-sm\"\r\n");
      out.write("                                        onclick=\"return confirm('Cancel this reservation?')\">\r\n");
      out.write("                                    <i class=\"fas fa-times\"></i> Cancel\r\n");
      out.write("                                </button>\r\n");
      out.write("                            </form>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </td>\r\n");
      out.write("                </tr>\r\n");
      out.write("                ");

                    }
                
      out.write("\r\n");
      out.write("            </tbody>\r\n");
      out.write("        </table>\r\n");
      out.write("\r\n");
      out.write("        ");
 } else { 
      out.write("\r\n");
      out.write("\r\n");
      out.write("        <div class=\"empty-state\">\r\n");
      out.write("            <i class=\"fas fa-inbox\"></i>\r\n");
      out.write("            <h3>Queue is Empty</h3>\r\n");
      out.write("            <p>No reservations are currently in the queue.</p>\r\n");
      out.write("            <p style=\"margin-top: 10px;\">\r\n");
      out.write("                <a href=\"../reservationQueue\" class=\"btn btn-primary\">\r\n");
      out.write("                    <i class=\"fas fa-plus\"></i> Add Reservation to Queue\r\n");
      out.write("                </a>\r\n");
      out.write("            </p>\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("        ");
 } 
      out.write("\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <!-- Technical Information -->\r\n");
      out.write("    <div class=\"control-panel\">\r\n");
      out.write("        <h3><i class=\"fas fa-info-circle\"></i> Technical Implementation</h3>\r\n");
      out.write("        <div style=\"display: grid; grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); gap: 20px;\">\r\n");
      out.write("            <div style=\"padding: 15px; background: var(--light); border-radius: 8px;\">\r\n");
      out.write("                <h4><i class=\"fas fa-layer-group\"></i> Queue Data Structure</h4>\r\n");
      out.write("                <ul style=\"margin: 10px 0; padding-left: 20px;\">\r\n");
      out.write("                    <li>Custom array-based circular queue</li>\r\n");
      out.write("                    <li>FIFO (First In, First Out) operations</li>\r\n");
      out.write("                    <li>Enqueue and Dequeue functionality</li>\r\n");
      out.write("                    <li>Automatic size management</li>\r\n");
      out.write("                </ul>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div style=\"padding: 15px; background: var(--light); border-radius: 8px;\">\r\n");
      out.write("                <h4><i class=\"fas fa-sort-amount-down\"></i> Merge Sort Algorithm</h4>\r\n");
      out.write("                <ul style=\"margin: 10px 0; padding-left: 20px;\">\r\n");
      out.write("                    <li>Divide and conquer approach</li>\r\n");
      out.write("                    <li>O(n log n) time complexity</li>\r\n");
      out.write("                    <li>Stable sorting by reservation time</li>\r\n");
      out.write("                    <li>Custom comparator implementation</li>\r\n");
      out.write("                </ul>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div style=\"margin-top: 15px; padding: 15px; background: #e3f2fd; border-radius: 8px; border-left: 4px solid var(--primary);\">\r\n");
      out.write("            <strong><i class=\"fas fa-graduation-cap\"></i> DSA Implementation Note:</strong>\r\n");
      out.write("            This system implements custom Queue and Merge Sort algorithms from scratch without using Java Collections Framework,\r\n");
      out.write("            demonstrating fundamental data structure and algorithm concepts for academic evaluation.\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("    // Auto-refresh every 30 seconds\r\n");
      out.write("    setTimeout(function() {\r\n");
      out.write("        window.location.reload();\r\n");
      out.write("    }, 30000);\r\n");
      out.write("\r\n");
      out.write("    // Add loading state to buttons\r\n");
      out.write("    document.querySelectorAll('button[type=\"submit\"]').forEach(button => {\r\n");
      out.write("        button.addEventListener('click', function() {\r\n");
      out.write("            this.disabled = true;\r\n");
      out.write("            const originalText = this.innerHTML;\r\n");
      out.write("            this.innerHTML = '<i class=\"fas fa-spinner fa-spin\"></i> Processing...';\r\n");
      out.write("\r\n");
      out.write("            // Re-enable after 3 seconds as fallback\r\n");
      out.write("            setTimeout(() => {\r\n");
      out.write("                this.disabled = false;\r\n");
      out.write("                this.innerHTML = originalText;\r\n");
      out.write("            }, 3000);\r\n");
      out.write("        });\r\n");
      out.write("    });\r\n");
      out.write("\r\n");
      out.write("    // Confirmation dialogs\r\n");
      out.write("    document.querySelectorAll('form').forEach(form => {\r\n");
      out.write("        const action = form.querySelector('input[name=\"action\"]')?.value;\r\n");
      out.write("        if (action === 'clearQueue') {\r\n");
      out.write("            form.addEventListener('submit', function(e) {\r\n");
      out.write("                if (!confirm('This will remove all reservations from the queue. Are you sure?')) {\r\n");
      out.write("                    e.preventDefault();\r\n");
      out.write("                }\r\n");
      out.write("            });\r\n");
      out.write("        }\r\n");
      out.write("    });\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
