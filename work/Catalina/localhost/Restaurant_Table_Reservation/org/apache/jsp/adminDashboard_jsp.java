/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.41
 * Generated at: 2025-05-26 16:44:47 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import java.util.*;
import com.example.restaurant_table_reservation.model.User;
import com.example.restaurant_table_reservation.model.Reservation;
import com.example.restaurant_table_reservation.model.Table;
import com.example.restaurant_table_reservation.service.UserService;
import com.example.restaurant_table_reservation.service.TableService;

public final class adminDashboard_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(6);
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(7);
    _jspx_imports_classes.add("com.example.restaurant_table_reservation.service.UserService");
    _jspx_imports_classes.add("com.example.restaurant_table_reservation.model.Table");
    _jspx_imports_classes.add("com.example.restaurant_table_reservation.model.User");
    _jspx_imports_classes.add("com.example.restaurant_table_reservation.model.Reservation");
    _jspx_imports_classes.add("com.example.restaurant_table_reservation.service.TableService");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\n');
      out.write('\n');

    Integer totalUsers = (Integer) request.getAttribute("totalUsers");
    Integer todaysOrdersCount = (Integer) request.getAttribute("todaysOrdersCount");
    Long availableTablesCount = (Long) request.getAttribute("availableTablesCount");
    Integer totalTablesCount = (Integer) request.getAttribute("totalTablesCount");
    Double todaysRevenue = (Double) request.getAttribute("todaysRevenue");
    List<User> users = (List<User>) request.getAttribute("users");
    List<Reservation> reservations = (List<Reservation>) request.getAttribute("reservations");
    UserService userService = (UserService) request.getAttribute("userService");
    TableService tableService = (TableService) request.getAttribute("tableService");

      out.write("\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("    <title>Admin Dashboard</title>\n");
      out.write("    <style>\n");
      out.write("        /* Modern Admin Dashboard CSS */\n");
      out.write("        :root {\n");
      out.write("            --primary: #5c6bc0;\n");
      out.write("            --primary-dark: #3949ab;\n");
      out.write("            --primary-light: #7986cb;\n");
      out.write("            --accent: #ff7043;\n");
      out.write("            --text: #263238;\n");
      out.write("            --text-light: #546e7a;\n");
      out.write("            --background: #f5f7fa;\n");
      out.write("            --card-bg: #ffffff;\n");
      out.write("            --success: #66bb6a;\n");
      out.write("            --warning: #ffa726;\n");
      out.write("            --error: #ef5350;\n");
      out.write("            --border: #e0e0e0;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        * {\n");
      out.write("            margin: 0;\n");
      out.write("            padding: 0;\n");
      out.write("            box-sizing: border-box;\n");
      out.write("            font-family: 'Roboto', -apple-system, BlinkMacSystemFont, 'Segoe UI', Oxygen, Ubuntu, Cantarell, sans-serif;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        body {\n");
      out.write("            background: var(--background) !important;\n");
      out.write("            background-color: var(--background) !important;\n");
      out.write("            color: var(--text);\n");
      out.write("            line-height: 1.6;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .admin-container {\n");
      out.write("            display: grid;\n");
      out.write("            grid-template-columns: 240px 1fr;\n");
      out.write("            min-height: 100vh;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        /* Sidebar Styles */\n");
      out.write("        .admin-sidebar {\n");
      out.write("            background: var(--primary);\n");
      out.write("            color: white;\n");
      out.write("            padding: 1.5rem 0;\n");
      out.write("            box-shadow: 2px 0 10px rgba(0,0,0,0.1);\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .admin-brand {\n");
      out.write("            padding: 0 1.5rem 1.5rem;\n");
      out.write("            border-bottom: 1px solid rgba(255,255,255,0.1);\n");
      out.write("            margin-bottom: 1.5rem;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .admin-brand h1 {\n");
      out.write("            font-size: 1.3rem;\n");
      out.write("            font-weight: 600;\n");
      out.write("            display: flex;\n");
      out.write("            align-items: center;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .admin-brand h1 i {\n");
      out.write("            margin-right: 10px;\n");
      out.write("            color: var(--accent);\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .admin-nav ul {\n");
      out.write("            list-style: none;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .admin-nav li a {\n");
      out.write("            display: flex;\n");
      out.write("            align-items: center;\n");
      out.write("            padding: 0.8rem 1.5rem;\n");
      out.write("            color: rgba(255,255,255,0.9);\n");
      out.write("            text-decoration: none;\n");
      out.write("            transition: all 0.2s;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .admin-nav li a:hover,\n");
      out.write("        .admin-nav li a.active {\n");
      out.write("            background: rgba(255,255,255,0.1);\n");
      out.write("            color: white;\n");
      out.write("            border-left: 3px solid var(--accent);\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .admin-nav li a i {\n");
      out.write("            margin-right: 12px;\n");
      out.write("            width: 20px;\n");
      out.write("            text-align: center;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        /* Main Content Styles */\n");
      out.write("        .admin-main {\n");
      out.write("            padding: 2rem;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .admin-header {\n");
      out.write("            display: flex;\n");
      out.write("            justify-content: space-between;\n");
      out.write("            align-items: center;\n");
      out.write("            margin-bottom: 2rem;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .admin-title h2 {\n");
      out.write("            font-size: 1.5rem;\n");
      out.write("            color: var(--text);\n");
      out.write("            font-weight: 500;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .admin-title p {\n");
      out.write("            color: var(--text-light);\n");
      out.write("            font-size: 0.9rem;\n");
      out.write("            margin-top: 0.3rem;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .admin-user {\n");
      out.write("            display: flex;\n");
      out.write("            align-items: center;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .admin-user img {\n");
      out.write("            width: 40px;\n");
      out.write("            height: 40px;\n");
      out.write("            border-radius: 50%;\n");
      out.write("            margin-right: 10px;\n");
      out.write("            object-fit: cover;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .admin-user-info small {\n");
      out.write("            display: block;\n");
      out.write("            color: var(--text-light);\n");
      out.write("            font-size: 0.8rem;\n");
      out.write("            margin-top: 2px;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        /* Dashboard Cards */\n");
      out.write("        .stats-grid {\n");
      out.write("            display: grid;\n");
      out.write("            grid-template-columns: repeat(auto-fit, minmax(240px, 1fr));\n");
      out.write("            gap: 1.5rem;\n");
      out.write("            margin-bottom: 2rem;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .stat-card {\n");
      out.write("            background: var(--card-bg);\n");
      out.write("            border-radius: 8px;\n");
      out.write("            padding: 1.5rem;\n");
      out.write("            box-shadow: 0 2px 10px rgba(0,0,0,0.05);\n");
      out.write("            transition: transform 0.3s;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .stat-card:hover {\n");
      out.write("            transform: translateY(-5px);\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .stat-card-header {\n");
      out.write("            display: flex;\n");
      out.write("            justify-content: space-between;\n");
      out.write("            align-items: center;\n");
      out.write("            margin-bottom: 1rem;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .stat-card-icon {\n");
      out.write("            width: 50px;\n");
      out.write("            height: 50px;\n");
      out.write("            border-radius: 50%;\n");
      out.write("            display: flex;\n");
      out.write("            align-items: center;\n");
      out.write("            justify-content: center;\n");
      out.write("            color: white;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .stat-card-icon.users {\n");
      out.write("            background: linear-gradient(135deg, #9575cd, #7e57c2);\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .stat-card-icon.orders {\n");
      out.write("            background: linear-gradient(135deg, #64b5f6, #42a5f5);\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .stat-card-icon.tables {\n");
      out.write("            background: linear-gradient(135deg, #4db6ac, #26a69a);\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .stat-card-icon.revenue {\n");
      out.write("            background: linear-gradient(135deg, #ffb74d, #ffa726);\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .stat-card h3 {\n");
      out.write("            font-size: 1.1rem;\n");
      out.write("            color: var(--text-light);\n");
      out.write("            font-weight: 500;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .stat-card h2 {\n");
      out.write("            font-size: 1.8rem;\n");
      out.write("            margin: 0.5rem 0;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .stat-card p {\n");
      out.write("            color: var(--text-light);\n");
      out.write("            font-size: 0.85rem;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        /* Content Sections */\n");
      out.write("        .content-section {\n");
      out.write("            background: var(--card-bg);\n");
      out.write("            border-radius: 8px;\n");
      out.write("            padding: 1.5rem;\n");
      out.write("            box-shadow: 0 2px 10px rgba(0,0,0,0.05);\n");
      out.write("            margin-bottom: 2rem;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .section-header {\n");
      out.write("            display: flex;\n");
      out.write("            justify-content: space-between;\n");
      out.write("            align-items: center;\n");
      out.write("            margin-bottom: 1.5rem;\n");
      out.write("            padding-bottom: 0.8rem;\n");
      out.write("            border-bottom: 1px solid var(--border);\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .section-header h3 {\n");
      out.write("            font-size: 1.2rem;\n");
      out.write("            font-weight: 500;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .section-header a {\n");
      out.write("            color: var(--primary);\n");
      out.write("            text-decoration: none;\n");
      out.write("            font-size: 0.9rem;\n");
      out.write("            display: flex;\n");
      out.write("            align-items: center;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .section-header a i {\n");
      out.write("            margin-left: 5px;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        /* Tables - Updated with black text */\n");
      out.write("        .data-table {\n");
      out.write("            width: 100%;\n");
      out.write("            border-collapse: collapse;\n");
      out.write("            color: #000000;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .data-table th {\n");
      out.write("            text-align: left;\n");
      out.write("            padding: 0.8rem;\n");
      out.write("            color: var(--text-light);\n");
      out.write("            font-weight: 500;\n");
      out.write("            font-size: 0.85rem;\n");
      out.write("            text-transform: uppercase;\n");
      out.write("            border-bottom: 1px solid var(--border);\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .data-table td {\n");
      out.write("            padding: 0.8rem;\n");
      out.write("            border-bottom: 1px solid var(--border);\n");
      out.write("            font-size: 0.9rem;\n");
      out.write("            color: #000000 !important;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .data-table tr:last-child td {\n");
      out.write("            border-bottom: none;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .action-btn {\n");
      out.write("            padding: 0.3rem 0.6rem;\n");
      out.write("            border: none;\n");
      out.write("            border-radius: 4px;\n");
      out.write("            cursor: pointer;\n");
      out.write("            margin-right: 0.5rem;\n");
      out.write("            text-decoration: none;\n");
      out.write("            color: white;\n");
      out.write("            font-size: 0.85rem;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .edit-btn {\n");
      out.write("            background-color: #ff9500;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .delete-btn {\n");
      out.write("            background-color: var(--error);\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        /* Responsive */\n");
      out.write("        @media (max-width: 992px) {\n");
      out.write("            .admin-container {\n");
      out.write("                grid-template-columns: 1fr;\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            .admin-sidebar {\n");
      out.write("                display: none;\n");
      out.write("            }\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        /* Specific style adjustments for the reservations table */\n");
      out.write("         .reservations-table th {\n");
      out.write("             background-color: #4CAF50; /* Green header */\n");
      out.write("             color: white; /* White text */\n");
      out.write("             text-align: center;\n");
      out.write("         }\n");
      out.write("\n");
      out.write("         .reservations-table td {\n");
      out.write("             text-align: center;\n");
      out.write("         }\n");
      out.write("    </style>\n");
      out.write("    <!-- Font Awesome for icons -->\n");
      out.write("    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css\">\n");
      out.write("    <!-- Roboto font -->\n");
      out.write("    <link href=\"https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;700&display=swap\" rel=\"stylesheet\">\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("<div class=\"admin-container\">\n");
      out.write("    <!-- Sidebar Navigation -->\n");
      out.write("    <aside class=\"admin-sidebar\">\n");
      out.write("        <div class=\"admin-brand\">\n");
      out.write("            <h1><i class=\"fas fa-utensils\"></i> Restaurant Admin</h1>\n");
      out.write("        </div>\n");
      out.write("        <!-- In the sidebar navigation -->\n");
      out.write("        <nav class=\"admin-nav\">\n");
      out.write("            <ul>\n");
      out.write("                <li><a href=\"#\" class=\"active\"><i class=\"fas fa-tachometer-alt\"></i> Dashboard</a></li>\n");
      out.write("                <li><a href=\"#\"><i class=\"fas fa-users\"></i> Users</a></li>\n");
      out.write("                <li><a href=\"#\"><i class=\"fas fa-clipboard-list\"></i> Orders</a></li>\n");
      out.write("                <li><a href=\"#\"><i class=\"fas fa-chair\"></i> Tables</a></li>\n");
      out.write("\n");
      out.write("                <!-- NEW QUEUE MANAGEMENT LINK -->\n");
      out.write("                <li><a href=\"admin/queueManagement\"><i class=\"fas fa-clock\"></i> Queue Management</a></li>\n");
      out.write("\n");
      out.write("                <li><a href=\"#\"><i class=\"fas fa-utensils\"></i> Menu</a></li>\n");
      out.write("                <li><a href=\"#\"><i class=\"fas fa-comment-alt\"></i> Feedback</a></li>\n");
      out.write("            </ul>\n");
      out.write("        </nav>\n");
      out.write("    </aside>\n");
      out.write("\n");
      out.write("    <!-- Main Content Area -->\n");
      out.write("    <main class=\"admin-main\">\n");
      out.write("        <header class=\"admin-header\">\n");
      out.write("            <div class=\"admin-title\">\n");
      out.write("                <h2>Dashboard Overview</h2>\n");
      out.write("                <p>Welcome back! Here's what's happening with your restaurant today.</p>\n");
      out.write("            </div>\n");
      out.write("            <div class=\"admin-user\">\n");
      out.write("                <img src=\"https://randomuser.me/api/portraits/women/44.jpg\" alt=\"Admin User\">\n");
      out.write("                <div class=\"admin-user-info\">\n");
      out.write("                    <strong>Admin User</strong>\n");
      out.write("                    <small>Restaurant Manager</small>\n");
      out.write("                </div>\n");
      out.write("            </div>\n");
      out.write("        </header>\n");
      out.write("\n");
      out.write("        <!-- Stats Cards -->\n");
      out.write("        <div class=\"stats-grid\">\n");
      out.write("            <div class=\"stat-card\">\n");
      out.write("                <div class=\"stat-card-header\">\n");
      out.write("                    <h3>Total Users</h3>\n");
      out.write("                    <div class=\"stat-card-icon users\">\n");
      out.write("                        <i class=\"fas fa-users\"></i>\n");
      out.write("                    </div>\n");
      out.write("                </div>\n");
      out.write("                <h2>");
      out.print( totalUsers );
      out.write("</h2>\n");
      out.write("            </div>\n");
      out.write("            <div class=\"stat-card\">\n");
      out.write("                <div class=\"stat-card-header\">\n");
      out.write("                    <h3>Today's Orders</h3>\n");
      out.write("                    <div class=\"stat-card-icon orders\">\n");
      out.write("                        <i class=\"fas fa-clipboard-list\"></i>\n");
      out.write("                    </div>\n");
      out.write("                </div>\n");
      out.write("                <h2>");
      out.print( todaysOrdersCount );
      out.write("</h2>\n");
      out.write("            </div>\n");
      out.write("            <div class=\"stat-card\">\n");
      out.write("                <div class=\"stat-card-header\">\n");
      out.write("                    <h3>Available Tables</h3>\n");
      out.write("                    <div class=\"stat-card-icon tables\">\n");
      out.write("                        <i class=\"fas fa-chair\"></i>\n");
      out.write("                    </div>\n");
      out.write("                </div>\n");
      out.write("                <h2>");
      out.print( availableTablesCount );
      out.write('/');
      out.print( totalTablesCount );
      out.write("</h2>\n");
      out.write("            </div>\n");
      out.write("            <div class=\"stat-card\">\n");
      out.write("                <div class=\"stat-card-header\">\n");
      out.write("                    <h3>Today's Revenue</h3>\n");
      out.write("                    <div class=\"stat-card-icon revenue\">\n");
      out.write("                        <i class=\"fas fa-dollar-sign\"></i>\n");
      out.write("                    </div>\n");
      out.write("                </div>\n");
      out.write("                <h2>$");
      out.print( String.format("%.2f", todaysRevenue) );
      out.write("</h2>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("\n");
      out.write("        <!-- Recent Orders Section -->\n");
      out.write("        <div class=\"content-section\">\n");
      out.write("            <div class=\"section-header\">\n");
      out.write("                <h3><i class=\"fas fa-clipboard-list\"></i> Recent Orders</h3>\n");
      out.write("                <a href=\"#\">View All <i class=\"fas fa-chevron-right\"></i></a>\n");
      out.write("            </div>\n");
      out.write("            ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "showOrders.jsp", out, false);
      out.write("\n");
      out.write("        </div>\n");
      out.write("\n");
      out.write("        <!-- Users Section -->\n");
      out.write("        <div class=\"content-section\">\n");
      out.write("            <div class=\"section-header\">\n");
      out.write("                <h3><i class=\"fas fa-users\"></i> Registered Users</h3>\n");
      out.write("                <a href=\"showUsers\" style=\"color: var(--primary); text-decoration: none; font-size: 0.9rem;\">View All <i class=\"fas fa-chevron-right\"></i></a>\n");
      out.write("            </div>\n");
      out.write("            <table class=\"data-table\">\n");
      out.write("                <tr>\n");
      out.write("                    <th>ID</th>\n");
      out.write("                    <th>Username</th>\n");
      out.write("                    <th>Email</th>\n");
      out.write("                    <th>Actions</th>\n");
      out.write("                </tr>\n");
      out.write("                ");
 if (users != null && !users.isEmpty()) {
                    for (User user : users) { 
      out.write("\n");
      out.write("                <tr>\n");
      out.write("                    <td>");
      out.print( user.getId() );
      out.write("</td>\n");
      out.write("                    <td>");
      out.print( user.getUsername() );
      out.write("</td>\n");
      out.write("                    <td>");
      out.print( user.getEmail() != null ? user.getEmail() : "N/A" );
      out.write("</td>\n");
      out.write("                    <td>\n");
      out.write("                        <a href=\"editUser?id=");
      out.print( user.getId() );
      out.write("\" class=\"action-btn edit-btn\">Edit</a>\n");
      out.write("                        <a href=\"deleteUser?id=");
      out.print( user.getId() );
      out.write("\" class=\"action-btn delete-btn\">Delete</a>\n");
      out.write("                    </td>\n");
      out.write("                </tr>\n");
      out.write("                ");
 } } else { 
      out.write("\n");
      out.write("                <tr>\n");
      out.write("                    <td colspan=\"4\">No users found.</td>\n");
      out.write("                </tr>\n");
      out.write("                ");
 } 
      out.write("\n");
      out.write("            </table>\n");
      out.write("        </div>\n");
      out.write("\n");
      out.write("        <!-- Reservations Section -->\n");
      out.write("        <div class=\"content-section\">\n");
      out.write("            <div class=\"section-header\">\n");
      out.write("                <h3><i class=\"fas fa-calendar-alt\"></i> Reservations</h3>\n");
      out.write("                <a href=\"adminReservations\" class=\"view-all-link\">View All</a>\n");
      out.write("            </div>\n");
      out.write("            <div class=\"card\">\n");
      out.write("                <div class=\"card-body\">\n");
      out.write("                    <table class=\"data-table reservations-table\">\n");
      out.write("                        <thead>\n");
      out.write("                            <tr>\n");
      out.write("                                <th>RESERVATION ID</th>\n");
      out.write("                                <th>USER</th>\n");
      out.write("                                <th>TABLE NUMBER</th>\n");
      out.write("                                <th>RESERVATION DATE & TIME</th>\n");
      out.write("                                <!-- Add more headers if needed (e.g., actions like cancel) -->\n");
      out.write("                            </tr>\n");
      out.write("                        </thead>\n");
      out.write("                        <tbody id=\"reservations-table-body\">\n");
      out.write("                             ");
      out.write("\n");
      out.write("                             <tr>\n");
      out.write("                                <td colspan=\"4\">Loading reservations...</td>\n");
      out.write("                            </tr>\n");
      out.write("                        </tbody>\n");
      out.write("                    </table>\n");
      out.write("                </div>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("\n");
      out.write("        <!-- Tables Section -->\n");
      out.write("        <div class=\"content-section\">\n");
      out.write("            <div class=\"section-header\">\n");
      out.write("                <h3><i class=\"fas fa-chair\"></i> Table Status</h3>\n");
      out.write("                <a href=\"#\">Manage Tables <i class=\"fas fa-chevron-right\"></i></a>\n");
      out.write("            </div>\n");
      out.write("            ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "tables.jsp", out, false);
      out.write("\n");
      out.write("        </div>\n");
      out.write("\n");
      out.write("        <!-- Manage Feedback and Menus Section -->\n");
      out.write("        <div class=\"content-section\">\n");
      out.write("            <div class=\"section-header\">\n");
      out.write("                <h3>Manage Feedback and Menus</h3>\n");
      out.write("            </div>\n");
      out.write("            <div style=\"display: flex; gap: 1rem;\">\n");
      out.write("                <a href=\"reviews\" style=\"flex: 1; text-align: center; padding: 1rem; background-color: var(--primary); color: white; border-radius: 8px; text-decoration: none; font-weight: 500; transition: background-color 0.3s;\">\n");
      out.write("                    Manage Feedback\n");
      out.write("                </a>\n");
      out.write("                <a href=\"menu\" style=\"flex: 1; text-align: center; padding: 1rem; background-color: var(--primary); color: white; border-radius: 8px; text-decoration: none; font-weight: 500; transition: background-color 0.3s;\">\n");
      out.write("                    Manage Menus\n");
      out.write("                </a>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("    </main>\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("<script>\n");
      out.write("    async function fetchReservations() {\n");
      out.write("        try {\n");
      out.write("            const response = await fetch('api/admin/reservations');\n");
      out.write("            if (!response.ok) {\n");
      out.write("                throw new Error(`HTTP error! status: ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${response.status}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("`);\n");
      out.write("            }\n");
      out.write("            const reservations = await response.json();\n");
      out.write("            const tbody = document.getElementById('reservations-table-body');\n");
      out.write("            tbody.innerHTML = ''; // Clear existing rows\n");
      out.write("\n");
      out.write("            if (reservations.length === 0) {\n");
      out.write("                tbody.innerHTML = '<tr><td colspan=\"4\">No reservations found.</td></tr>';\n");
      out.write("            } else {\n");
      out.write("                reservations.forEach(reservation => {\n");
      out.write("                    const row = `\n");
      out.write("                        <tr>\n");
      out.write("                            <td>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${reservation.id}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</td>\n");
      out.write("                            <td>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${reservation.username}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</td>\n");
      out.write("                            <td>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${reservation.tableNumber}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</td>\n");
      out.write("                            <td>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${reservation.reservationTime}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</td>\n");
      out.write("                        </tr>\n");
      out.write("                    `;\n");
      out.write("                    tbody.innerHTML += row;\n");
      out.write("                });\n");
      out.write("            }\n");
      out.write("        } catch (error) {\n");
      out.write("            console.error('Error fetching reservations:', error);\n");
      out.write("            const tbody = document.getElementById('reservations-table-body');\n");
      out.write("            tbody.innerHTML = '<tr><td colspan=\"4\" style=\"color: red;\">Error loading reservations.</td></tr>';\n");
      out.write("        }\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    // Fetch reservations when the page loads\n");
      out.write("    fetchReservations();\n");
      out.write("\n");
      out.write("    // Fetch reservations every 10 seconds (adjust the interval as needed)\n");
      out.write("    setInterval(fetchReservations, 10000); // 10000 milliseconds = 10 seconds\n");
      out.write("</script>\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
