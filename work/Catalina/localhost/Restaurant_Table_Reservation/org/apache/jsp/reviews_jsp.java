/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.41
 * Generated at: 2025-05-26 16:45:16 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import java.util.*;
import com.example.restaurant_table_reservation.model.Review;

public final class reviews_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(6);
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(2);
    _jspx_imports_classes.add("com.example.restaurant_table_reservation.model.Review");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("    <title>Customer Reviews</title>\n");
      out.write("    <style>\n");
      out.write("        body {\n");
      out.write("            font-family: Arial, sans-serif;\n");
      out.write("            margin: 20px;\n");
      out.write("            background-color: #f4f4f4;\n");
      out.write("        }\n");
      out.write("        h2 {\n");
      out.write("            text-align: center;\n");
      out.write("            color: #333;\n");
      out.write("        }\n");
      out.write("        table {\n");
      out.write("            width: 90%;\n");
      out.write("            margin: 20px auto;\n");
      out.write("            border-collapse: collapse;\n");
      out.write("            background-color: #fff;\n");
      out.write("            box-shadow: 0 2px 10px rgba(0,0,0,0.1);\n");
      out.write("        }\n");
      out.write("        th, td {\n");
      out.write("            padding: 12px;\n");
      out.write("            border: 1px solid #ddd;\n");
      out.write("            text-align: left;\n");
      out.write("        }\n");
      out.write("        th {\n");
      out.write("            background-color: #4CAF50;\n");
      out.write("            color: white;\n");
      out.write("        }\n");
      out.write("        .delete-btn {\n");
      out.write("            background-color: #FF4D4D;\n");
      out.write("            color: white;\n");
      out.write("            border: none;\n");
      out.write("            padding: 6px 12px;\n");
      out.write("            font-size: 14px;\n");
      out.write("            border-radius: 5px;\n");
      out.write("            cursor: pointer;\n");
      out.write("        }\n");
      out.write("        .delete-btn:hover {\n");
      out.write("            background-color: #FF3333;\n");
      out.write("        }\n");
      out.write("        .edit-btn {\n");
      out.write("            background-color: #4CAF50;\n");
      out.write("            color: white;\n");
      out.write("            border: none;\n");
      out.write("            padding: 6px 12px;\n");
      out.write("            font-size: 14px;\n");
      out.write("            border-radius: 5px;\n");
      out.write("            cursor: pointer;\n");
      out.write("            margin-left: 5px;\n");
      out.write("        }\n");
      out.write("        .edit-btn:hover {\n");
      out.write("            background-color: #45a049;\n");
      out.write("        }\n");
      out.write("    </style>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("<h2>Customer Reviews</h2>\n");
      out.write("\n");

    Review editReview = (Review) request.getAttribute("editReview");
    if (editReview != null) {

      out.write("\n");
      out.write("<form action=\"reviews\" method=\"POST\" style=\"width: 90%; margin: 20px auto; background: #fff; padding: 20px; border-radius: 8px; box-shadow: 0 2px 10px rgba(0,0,0,0.1);\">\n");
      out.write("    <input type=\"hidden\" name=\"action\" value=\"update\">\n");
      out.write("    <input type=\"hidden\" name=\"id\" value=\"");
      out.print( editReview.getId() );
      out.write("\">\n");
      out.write("\n");
      out.write("    <label for=\"customerName\">Name:</label>\n");
      out.write("    <input type=\"text\" id=\"customerName\" name=\"customerName\" value=\"");
      out.print( editReview.getCustomerName() );
      out.write("\" required style=\"width: 100%; padding: 8px; margin-bottom: 10px;\">\n");
      out.write("\n");
      out.write("    <label for=\"email\">Email:</label>\n");
      out.write("    <input type=\"email\" id=\"email\" name=\"email\" value=\"");
      out.print( editReview.getEmail() );
      out.write("\" required style=\"width: 100%; padding: 8px; margin-bottom: 10px;\">\n");
      out.write("\n");
      out.write("    <label for=\"message\">Message:</label>\n");
      out.write("    <textarea id=\"message\" name=\"message\" rows=\"4\" required style=\"width: 100%; padding: 8px; margin-bottom: 10px;\">");
      out.print( editReview.getMessage() );
      out.write("</textarea>\n");
      out.write("\n");
      out.write("    <label for=\"rating\">Rating:</label>\n");
      out.write("    <select id=\"rating\" name=\"rating\" required style=\"width: 100%; padding: 8px; margin-bottom: 10px;\">\n");
      out.write("        <option value=\"1\" ");
      out.print( editReview.getRating() == 1 ? "selected" : "" );
      out.write(">1 - Poor</option>\n");
      out.write("        <option value=\"2\" ");
      out.print( editReview.getRating() == 2 ? "selected" : "" );
      out.write(">2 - Fair</option>\n");
      out.write("        <option value=\"3\" ");
      out.print( editReview.getRating() == 3 ? "selected" : "" );
      out.write(">3 - Good</option>\n");
      out.write("        <option value=\"4\" ");
      out.print( editReview.getRating() == 4 ? "selected" : "" );
      out.write(">4 - Very good</option>\n");
      out.write("        <option value=\"5\" ");
      out.print( editReview.getRating() == 5 ? "selected" : "" );
      out.write(">5 - Excellent</option>\n");
      out.write("    </select>\n");
      out.write("\n");
      out.write("    <label for=\"adminReply\">Admin Reply:</label>\n");
      out.write("    <textarea id=\"adminReply\" name=\"adminReply\" rows=\"2\" style=\"width: 100%; padding: 8px; margin-bottom: 10px;\">");
      out.print( editReview.getAdminReply() != null ? editReview.getAdminReply() : "" );
      out.write("</textarea>\n");
      out.write("\n");
      out.write("    <button type=\"submit\" style=\"background-color: #4CAF50; color: white; border: none; padding: 10px 20px; font-size: 16px; border-radius: 5px; cursor: pointer;\">Update Review</button>\n");
      out.write("</form>\n");

    }

      out.write("\n");
      out.write("\n");
      out.write("<table>\n");
      out.write("    <thead>\n");
      out.write("    <tr>\n");
      out.write("        <th>Name</th>\n");
      out.write("        <th>Email</th>\n");
      out.write("        <th>Message</th>\n");
      out.write("        <th>Rating</th>\n");
      out.write("        <th>Admin Reply</th>\n");
      out.write("        <th>Actions</th>\n");
      out.write("    </tr>\n");
      out.write("    </thead>\n");
      out.write("    <tbody>\n");
      out.write("    ");

        List<Review> reviews = (List<Review>) request.getAttribute("reviews");
        if (reviews != null && !reviews.isEmpty()) {
            for (Review review : reviews) {
    
      out.write("\n");
      out.write("    <tr>\n");
      out.write("        <td>");
      out.print( review.getCustomerName() );
      out.write("</td>\n");
      out.write("        <td>");
      out.print( review.getEmail() );
      out.write("</td>\n");
      out.write("        <td>");
      out.print( review.getMessage() );
      out.write("</td>\n");
      out.write("        <td>");
      out.print( review.getRating() );
      out.write(" / 5</td>\n");
      out.write("        <td>");
      out.print( review.getAdminReply() != null ? review.getAdminReply() : "" );
      out.write("</td>\n");
      out.write("        <td>\n");
      out.write("            <form action=\"reviews\" method=\"POST\" style=\"display:inline;\">\n");
      out.write("                <input type=\"hidden\" name=\"action\" value=\"delete\">\n");
      out.write("                <input type=\"hidden\" name=\"id\" value=\"");
      out.print( review.getId() );
      out.write("\">\n");
      out.write("                <button type=\"submit\" class=\"delete-btn\">Delete</button>\n");
      out.write("            </form>\n");
      out.write("            <form action=\"reviews\" method=\"GET\" style=\"display:inline;\">\n");
      out.write("                <input type=\"hidden\" name=\"action\" value=\"edit\">\n");
      out.write("                <input type=\"hidden\" name=\"id\" value=\"");
      out.print( review.getId() );
      out.write("\">\n");
      out.write("                <button type=\"submit\" class=\"edit-btn\">Edit</button>\n");
      out.write("            </form>\n");
      out.write("        </td>\n");
      out.write("    </tr>\n");
      out.write("    ");

            }
        } else {
    
      out.write("\n");
      out.write("    <tr>\n");
      out.write("        <td colspan=\"6\">No reviews available.</td>\n");
      out.write("    </tr>\n");
      out.write("    ");

        }
    
      out.write("\n");
      out.write("    </tbody>\n");
      out.write("</table>\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
