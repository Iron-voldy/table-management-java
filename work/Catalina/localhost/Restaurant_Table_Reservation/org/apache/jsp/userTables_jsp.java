/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.41
 * Generated at: 2025-05-26 16:45:26 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import java.util.*;
import com.example.restaurant_table_reservation.model.Table;

public final class userTables_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(6);
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(2);
    _jspx_imports_classes.add("com.example.restaurant_table_reservation.model.Table");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("    <title>Available Tables</title>\n");
      out.write("    <style>\n");
      out.write("        body {\n");
      out.write("            font-family: Arial, sans-serif;\n");
      out.write("            margin: 20px;\n");
      out.write("            background-color: #f9f9f9;\n");
      out.write("        }\n");
      out.write("        .header {\n");
      out.write("            text-align: center;\n");
      out.write("            margin-bottom: 30px;\n");
      out.write("        }\n");
      out.write("        h2 {\n");
      out.write("            color: #333;\n");
      out.write("            font-size: 2rem;\n");
      out.write("        }\n");
      out.write("        .nav-links {\n");
      out.write("            text-align: center;\n");
      out.write("            margin-bottom: 20px;\n");
      out.write("        }\n");
      out.write("        .nav-links a {\n");
      out.write("            display: inline-block;\n");
      out.write("            margin: 0 10px;\n");
      out.write("            padding: 10px 20px;\n");
      out.write("            background-color: #007bff;\n");
      out.write("            color: white;\n");
      out.write("            text-decoration: none;\n");
      out.write("            border-radius: 5px;\n");
      out.write("            transition: background-color 0.3s;\n");
      out.write("        }\n");
      out.write("        .nav-links a:hover {\n");
      out.write("            background-color: #0056b3;\n");
      out.write("        }\n");
      out.write("        .message {\n");
      out.write("            text-align: center;\n");
      out.write("            margin: 20px 0;\n");
      out.write("            padding: 15px;\n");
      out.write("            border-radius: 5px;\n");
      out.write("        }\n");
      out.write("        .success {\n");
      out.write("            background-color: #d4edda;\n");
      out.write("            color: #155724;\n");
      out.write("            border: 1px solid #c3e6cb;\n");
      out.write("        }\n");
      out.write("        .error {\n");
      out.write("            background-color: #f8d7da;\n");
      out.write("            color: #721c24;\n");
      out.write("            border: 1px solid #f5c6cb;\n");
      out.write("        }\n");
      out.write("        table {\n");
      out.write("            width: 90%;\n");
      out.write("            margin: 20px auto;\n");
      out.write("            border-collapse: collapse;\n");
      out.write("            background-color: #fff;\n");
      out.write("            box-shadow: 0 4px 15px rgba(0,0,0,0.1);\n");
      out.write("            border-radius: 10px;\n");
      out.write("            overflow: hidden;\n");
      out.write("        }\n");
      out.write("        th, td {\n");
      out.write("            padding: 15px 12px;\n");
      out.write("            text-align: center;\n");
      out.write("            color: #000000;\n");
      out.write("            border-bottom: 1px solid #ddd;\n");
      out.write("        }\n");
      out.write("        th {\n");
      out.write("            background-color: #4CAF50;\n");
      out.write("            color: white;\n");
      out.write("            font-weight: 600;\n");
      out.write("            text-transform: uppercase;\n");
      out.write("            letter-spacing: 0.5px;\n");
      out.write("        }\n");
      out.write("        tr:hover {\n");
      out.write("            background-color: #f5f5f5;\n");
      out.write("        }\n");
      out.write("        .reserve-btn {\n");
      out.write("            background-color: #28a745;\n");
      out.write("            color: white;\n");
      out.write("            border: none;\n");
      out.write("            padding: 10px 20px;\n");
      out.write("            font-size: 14px;\n");
      out.write("            border-radius: 5px;\n");
      out.write("            cursor: pointer;\n");
      out.write("            transition: all 0.3s;\n");
      out.write("        }\n");
      out.write("        .reserve-btn:hover {\n");
      out.write("            background-color: #218838;\n");
      out.write("            transform: translateY(-2px);\n");
      out.write("        }\n");
      out.write("        .reservation-form {\n");
      out.write("            display: inline-block;\n");
      out.write("            margin: 0 10px;\n");
      out.write("        }\n");
      out.write("        .form-group {\n");
      out.write("            margin-bottom: 15px;\n");
      out.write("        }\n");
      out.write("        .form-group label {\n");
      out.write("            display: block;\n");
      out.write("            margin-bottom: 5px;\n");
      out.write("            color: #333;\n");
      out.write("            font-weight: 500;\n");
      out.write("        }\n");
      out.write("        .form-group input[type=\"datetime-local\"] {\n");
      out.write("            padding: 8px 12px;\n");
      out.write("            border-radius: 4px;\n");
      out.write("            border: 1px solid #ccc;\n");
      out.write("            font-size: 14px;\n");
      out.write("            width: 180px;\n");
      out.write("        }\n");
      out.write("        .table-number {\n");
      out.write("            font-weight: bold;\n");
      out.write("            color: #007bff;\n");
      out.write("            font-size: 1.2em;\n");
      out.write("        }\n");
      out.write("        .table-capacity {\n");
      out.write("            color: #28a745;\n");
      out.write("            font-weight: 600;\n");
      out.write("        }\n");
      out.write("        .table-category {\n");
      out.write("            padding: 4px 8px;\n");
      out.write("            background-color: #e9ecef;\n");
      out.write("            border-radius: 12px;\n");
      out.write("            font-size: 12px;\n");
      out.write("            font-weight: 500;\n");
      out.write("            text-transform: uppercase;\n");
      out.write("        }\n");
      out.write("        .available {\n");
      out.write("            color: #28a745;\n");
      out.write("            font-weight: bold;\n");
      out.write("        }\n");
      out.write("        .not-available {\n");
      out.write("            color: #dc3545;\n");
      out.write("            font-weight: bold;\n");
      out.write("        }\n");
      out.write("        .queue-section {\n");
      out.write("            text-align: center;\n");
      out.write("            margin-top: 40px;\n");
      out.write("            padding: 30px;\n");
      out.write("            background-color: #fff;\n");
      out.write("            border-radius: 10px;\n");
      out.write("            box-shadow: 0 4px 15px rgba(0,0,0,0.1);\n");
      out.write("        }\n");
      out.write("        .queue-section h3 {\n");
      out.write("            color: #007bff;\n");
      out.write("            margin-bottom: 15px;\n");
      out.write("        }\n");
      out.write("        .queue-btn {\n");
      out.write("            display: inline-block;\n");
      out.write("            margin: 0 10px;\n");
      out.write("            padding: 15px 30px;\n");
      out.write("            background-color: #ffc107;\n");
      out.write("            color: #212529;\n");
      out.write("            text-decoration: none;\n");
      out.write("            border-radius: 8px;\n");
      out.write("            font-weight: 600;\n");
      out.write("            transition: all 0.3s;\n");
      out.write("        }\n");
      out.write("        .queue-btn:hover {\n");
      out.write("            background-color: #e0a800;\n");
      out.write("            transform: translateY(-2px);\n");
      out.write("        }\n");
      out.write("        .features-info {\n");
      out.write("            background-color: #e3f2fd;\n");
      out.write("            border-left: 4px solid #2196f3;\n");
      out.write("            padding: 20px;\n");
      out.write("            margin: 20px auto;\n");
      out.write("            width: 90%;\n");
      out.write("            border-radius: 5px;\n");
      out.write("        }\n");
      out.write("        .features-info h4 {\n");
      out.write("            color: #1976d2;\n");
      out.write("            margin-bottom: 10px;\n");
      out.write("        }\n");
      out.write("        .features-info ul {\n");
      out.write("            margin: 0;\n");
      out.write("            padding-left: 20px;\n");
      out.write("        }\n");
      out.write("        .features-info li {\n");
      out.write("            margin: 5px 0;\n");
      out.write("            color: #424242;\n");
      out.write("        }\n");
      out.write("        .no-tables {\n");
      out.write("            text-align: center;\n");
      out.write("            padding: 50px;\n");
      out.write("            color: #666;\n");
      out.write("            font-size: 1.2em;\n");
      out.write("        }\n");
      out.write("    </style>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("    <div class=\"header\">\n");
      out.write("        <h2>Available Tables for Reservation</h2>\n");
      out.write("        <p>Select a table and choose your preferred date and time</p>\n");
      out.write("    </div>\n");
      out.write("\n");
      out.write("    <div class=\"nav-links\">\n");
      out.write("        <a href=\"index.jsp\">🏠 Home</a>\n");
      out.write("        <a href=\"categoryMenu\">🍽️ View Menu</a>\n");
      out.write("        <a href=\"userReviews\">⭐ Reviews</a>\n");
      out.write("        <a href=\"logout\">🚪 Logout</a>\n");
      out.write("    </div>\n");
      out.write("\n");
      out.write("    <!-- Display Messages -->\n");
      out.write("    ");
 if (request.getAttribute("error") != null) { 
      out.write("\n");
      out.write("        <div class=\"message error\">\n");
      out.write("            <strong>Error:</strong> ");
      out.print( request.getAttribute("error") );
      out.write("\n");
      out.write("        </div>\n");
      out.write("    ");
 } 
      out.write("\n");
      out.write("\n");
      out.write("    ");
 if (request.getAttribute("message") != null) { 
      out.write("\n");
      out.write("        <div class=\"message success\">\n");
      out.write("            <strong>Success:</strong> ");
      out.print( request.getAttribute("message") );
      out.write("\n");
      out.write("        </div>\n");
      out.write("    ");
 } 
      out.write("\n");
      out.write("\n");
      out.write("    <!-- Features Information -->\n");
      out.write("    <div class=\"features-info\">\n");
      out.write("        <h4>🔧 System Features</h4>\n");
      out.write("        <ul>\n");
      out.write("            <li><strong>Custom Queue:</strong> Reservations are managed using a custom queue data structure</li>\n");
      out.write("            <li><strong>Merge Sort:</strong> All reservations are automatically sorted by time using merge sort algorithm</li>\n");
      out.write("            <li><strong>Real-time Updates:</strong> Table availability is updated immediately after booking</li>\n");
      out.write("            <li><strong>Time Validation:</strong> System prevents booking tables for past dates</li>\n");
      out.write("        </ul>\n");
      out.write("    </div>\n");
      out.write("\n");
      out.write("    <!-- Tables Display -->\n");
      out.write("    <table>\n");
      out.write("        <thead>\n");
      out.write("            <tr>\n");
      out.write("                <th>Table Number</th>\n");
      out.write("                <th>Capacity</th>\n");
      out.write("                <th>Category</th>\n");
      out.write("                <th>Availability</th>\n");
      out.write("                <th>Reserve</th>\n");
      out.write("            </tr>\n");
      out.write("        </thead>\n");
      out.write("        <tbody>\n");
      out.write("            ");

                List<Table> tables = (List<Table>) request.getAttribute("tables");
                if (tables != null && !tables.isEmpty()) {
                    boolean hasAvailableTables = false;
                    for (Table table : tables) {
                        if (table.isAvailable()) {
                            hasAvailableTables = true;
            
      out.write("\n");
      out.write("            <tr>\n");
      out.write("                <td>\n");
      out.write("                    <span class=\"table-number\">Table ");
      out.print( table.getNumber() );
      out.write("</span>\n");
      out.write("                </td>\n");
      out.write("                <td>\n");
      out.write("                    <span class=\"table-capacity\">");
      out.print( table.getCapacity() );
      out.write(" guests</span>\n");
      out.write("                </td>\n");
      out.write("                <td>\n");
      out.write("                    <span class=\"table-category\">");
      out.print( table.getCategory() != null ? table.getCategory() : "Standard" );
      out.write("</span>\n");
      out.write("                </td>\n");
      out.write("                <td>\n");
      out.write("                    <span class=\"available\">✅ Available</span>\n");
      out.write("                </td>\n");
      out.write("                <td>\n");
      out.write("                    <form action=\"reserve\" method=\"POST\" class=\"reservation-form\">\n");
      out.write("                        <input type=\"hidden\" name=\"tableId\" value=\"");
      out.print( table.getId() );
      out.write("\">\n");
      out.write("                        <div class=\"form-group\">\n");
      out.write("                            <label for=\"reservationTime-");
      out.print( table.getId() );
      out.write("\">📅 Date & Time:</label>\n");
      out.write("                            <input type=\"datetime-local\"\n");
      out.write("                                   id=\"reservationTime-");
      out.print( table.getId() );
      out.write("\"\n");
      out.write("                                   name=\"reservationTime\"\n");
      out.write("                                   required>\n");
      out.write("                        </div>\n");
      out.write("                        <button type=\"submit\" class=\"reserve-btn\">🍽️ Reserve Table</button>\n");
      out.write("                    </form>\n");
      out.write("                </td>\n");
      out.write("            </tr>\n");
      out.write("            ");

                        }
                    }

                    // Show unavailable tables
                    for (Table table : tables) {
                        if (!table.isAvailable()) {
            
      out.write("\n");
      out.write("            <tr style=\"opacity: 0.6; background-color: #f8f9fa;\">\n");
      out.write("                <td>\n");
      out.write("                    <span class=\"table-number\">Table ");
      out.print( table.getNumber() );
      out.write("</span>\n");
      out.write("                </td>\n");
      out.write("                <td>\n");
      out.write("                    <span class=\"table-capacity\">");
      out.print( table.getCapacity() );
      out.write(" guests</span>\n");
      out.write("                </td>\n");
      out.write("                <td>\n");
      out.write("                    <span class=\"table-category\">");
      out.print( table.getCategory() != null ? table.getCategory() : "Standard" );
      out.write("</span>\n");
      out.write("                </td>\n");
      out.write("                <td>\n");
      out.write("                    <span class=\"not-available\">❌ Reserved</span>\n");
      out.write("                </td>\n");
      out.write("                <td>\n");
      out.write("                    <em>Not Available</em>\n");
      out.write("                </td>\n");
      out.write("            </tr>\n");
      out.write("            ");

                        }
                    }

                    if (!hasAvailableTables) {
            
      out.write("\n");
      out.write("            <tr>\n");
      out.write("                <td colspan=\"5\" class=\"no-tables\">\n");
      out.write("                    <strong>No tables are currently available.</strong><br>\n");
      out.write("                    Please check the reservation queue or try again later.\n");
      out.write("                </td>\n");
      out.write("            </tr>\n");
      out.write("            ");

                    }
                } else {
            
      out.write("\n");
      out.write("            <tr>\n");
      out.write("                <td colspan=\"5\" class=\"no-tables\">\n");
      out.write("                    <strong>No tables found.</strong><br>\n");
      out.write("                    Please contact the administrator.\n");
      out.write("                </td>\n");
      out.write("            </tr>\n");
      out.write("            ");

                }
            
      out.write("\n");
      out.write("        </tbody>\n");
      out.write("    </table>\n");
      out.write("\n");
      out.write("    <!-- Queue Management Section -->\n");
      out.write("    <div class=\"queue-section\">\n");
      out.write("        <h3>🕒 Reservation Queue Management</h3>\n");
      out.write("        <p>Manage your reservations with our advanced queue system powered by custom data structures</p>\n");
      out.write("        <a href=\"reservationQueue\" class=\"queue-btn\">\n");
      out.write("            📋 View Reservation Queue\n");
      out.write("        </a>\n");
      out.write("        <a href=\"adminReservations\" class=\"queue-btn\" style=\"background-color: #17a2b8; color: white;\">\n");
      out.write("            👨‍💼 View All Reservations\n");
      out.write("        </a>\n");
      out.write("        <p style=\"margin-top: 15px; color: #666; font-size: 14px;\">\n");
      out.write("            <strong>Technical Features:</strong> Custom Queue Implementation • Merge Sort Algorithm • Real-time Updates\n");
      out.write("        </p>\n");
      out.write("    </div>\n");
      out.write("\n");
      out.write("    <script>\n");
      out.write("        // Set minimum datetime to current time for all datetime inputs\n");
      out.write("        document.addEventListener('DOMContentLoaded', function() {\n");
      out.write("            const now = new Date();\n");
      out.write("            const offset = now.getTimezoneOffset() * 60000; // offset in milliseconds\n");
      out.write("            const localISOTime = (new Date(now - offset)).toISOString().slice(0, 16);\n");
      out.write("\n");
      out.write("            const dateTimeInputs = document.querySelectorAll('input[type=\"datetime-local\"]');\n");
      out.write("            dateTimeInputs.forEach(input => {\n");
      out.write("                input.min = localISOTime;\n");
      out.write("            });\n");
      out.write("        });\n");
      out.write("\n");
      out.write("        // Form validation\n");
      out.write("        document.querySelectorAll('form').forEach(form => {\n");
      out.write("            form.addEventListener('submit', function(e) {\n");
      out.write("                const dateTimeInput = this.querySelector('input[type=\"datetime-local\"]');\n");
      out.write("                const selectedTime = new Date(dateTimeInput.value);\n");
      out.write("                const now = new Date();\n");
      out.write("\n");
      out.write("                if (selectedTime <= now) {\n");
      out.write("                    e.preventDefault();\n");
      out.write("                    alert('Please select a future date and time for your reservation.');\n");
      out.write("                    return false;\n");
      out.write("                }\n");
      out.write("\n");
      out.write("                // Confirm reservation\n");
      out.write("                const tableNumber = this.closest('tr').querySelector('.table-number').textContent;\n");
      out.write("                const formattedTime = selectedTime.toLocaleString();\n");
      out.write("\n");
      out.write("                if (!confirm(`Confirm reservation for ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${tableNumber}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(" on ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${formattedTime}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("?`)) {\n");
      out.write("                    e.preventDefault();\n");
      out.write("                    return false;\n");
      out.write("                }\n");
      out.write("            });\n");
      out.write("        });\n");
      out.write("\n");
      out.write("        // Auto-hide messages after 5 seconds\n");
      out.write("        setTimeout(function() {\n");
      out.write("            const messages = document.querySelectorAll('.message');\n");
      out.write("            messages.forEach(message => {\n");
      out.write("                message.style.opacity = '0';\n");
      out.write("                setTimeout(() => message.remove(), 300);\n");
      out.write("            });\n");
      out.write("        }, 5000);\n");
      out.write("    </script>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
